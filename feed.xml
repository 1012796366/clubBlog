<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.1">Jekyll</generator><link href="https://vjudge1.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://vjudge1.github.io/" rel="alternate" type="text/html" /><updated>2016-03-18T20:46:23+08:00</updated><id>https://vjudge1.github.io/</id><title>Unorz</title><subtitle>Doubleplusorz...</subtitle><entry><title>易班</title><link href="https://vjudge1.github.io/2016/03/15/yiban.html" rel="alternate" type="text/html" title="易班" /><published>2016-03-15T00:00:00+08:00</published><updated>2016-03-15T00:00:00+08:00</updated><id>https://vjudge1.github.io/2016/03/15/yiban</id><content type="html" xml:base="https://vjudge1.github.io/2016/03/15/yiban.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;有罪推定&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;百度&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;谷歌&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;寻找事实&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;易班是一个整合微博、微信、BBS、@#￥%……的全能社交应用，跟校内网（现在是人人网）比较像，不过只能由在校学生注册。不过有些大学同学就抱怨“为什么强制注册易班”（有的学校甚至拿它和考核挂钩），“是不是有背景”……事实是什么样的呢？&lt;/p&gt;

&lt;p&gt;作为不归学校管的局外人，写点“&lt;s&gt;伪&lt;/s&gt;客观&lt;s&gt;伪&lt;/s&gt;公正”的东西吧。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;有罪推定&lt;/h1&gt;

&lt;p&gt;“有罪推定”是很不恰当的。不过，站在同学的角度上想想，被强制要求注册一个实名制社交网站，还跟各种考核挂钩，心里肯定很不爽，怎么能不抱着“有罪推定”的心态去了解这个东西呢？&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;百度&lt;/h2&gt;

&lt;p&gt;遇到问题，习惯性地百度了一下……&lt;/p&gt;

&lt;p&gt;首先是&lt;a href=&quot;http://baike.baidu.com/view/4320108.htm&quot;&gt;百度百科词条&lt;/a&gt;——“全国教育系统的知名文化品牌”。我相信被要求注册的看到这些文字肯定不爽——全是正面的——既然它是个好东西，怎么还要强制注册？肯定有问题。&lt;/p&gt;

&lt;p&gt;接着百度。天啊，貌似都是正面的东西，而且发现一个天大的事实——原来不光我们学校有，别的学校也有！看来“易班的背景不小”。&lt;/p&gt;

&lt;p&gt;心里肯定还是不爽，直到看到&lt;a href=&quot;https://www.zhihu.com/topic/19828760/newest&quot;&gt;知乎上的讨论&lt;/a&gt;，心里踏实多了——都是心里话啊！道出了人民的心声！&lt;/p&gt;

&lt;div class=&quot;callout callout-warning&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;先别急&lt;/h4&gt;

&lt;p&gt;不好意思，我告诉你，知乎上的很多讨论是没有根据的，换句话说，他们道出了“易班”在自己学校的“强大”力量，但是抱着有罪推定的心态来看待它的“背景”。结果怎么能客观公正呢？&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-2&quot;&gt;谷歌&lt;/h2&gt;

&lt;p&gt;跟别人学会了科学上网，听说谷歌搜索的质量比较高，那么谷歌里会不会有“我想要的”内容呢？&lt;/p&gt;

&lt;p&gt;一查，发现了维基百科——&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%98%93%E7%8F%AD&quot;&gt;果然有&lt;/a&gt;！果然不是宣传，果然把不爽的东西都写上了——果然——&lt;/p&gt;

&lt;h1 id=&quot;section-3&quot;&gt;寻找事实&lt;/h1&gt;

&lt;p&gt;虽然百毒百科经常被当作垃圾厂一样对待，但是谁敢保证维基百科不是垃圾桶呢？&lt;/p&gt;

&lt;p&gt;我们想要知道客观事实，就不能抱着“易班是坏东西”的想法先入为主。&lt;/p&gt;

&lt;p&gt;不管维基百科里的文字是真实的还是胡写的，我们发现了一个神奇的事实——原来推广易班是教育部发的&lt;a href=&quot;http://www.moe.edu.cn/publicfiles/business/htmlfiles/moe/moe_1779/201502/183854.html&quot;&gt;文件&lt;/a&gt;！&lt;/p&gt;

&lt;p&gt;官方文件最能说明问题。虽然官方文件往往是由一些倒背如流的词语组成的，不过为了深刻理解易班的“背景”，阅读官方文件还是很有必要的。&lt;/p&gt;

&lt;p&gt;从文件内容来看，易班是一个前途光明的软件。教育部下那么大的力度发展易班，能达到什么效果呢？&lt;/p&gt;

&lt;p&gt;一定要仔细阅读文件！&lt;/p&gt;

&lt;p&gt;不管你有没有&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%8A%AF%E7%BD%AA%E6%80%9D%E6%83%B3&quot;&gt;犯罪思想&lt;/a&gt;（thoughtcrime），估计看完之后都会有自己的想法。&lt;/p&gt;

&lt;p&gt;啊，原来如此！&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;text-center&quot;&gt;
&lt;img src=&quot;/img/telescreen.jpg&quot; style=&quot;width:300px;&quot; /&gt;&lt;br /&gt;
BIG BROTHER IS WATCHING YOU
&lt;/div&gt;</content><author><name>vjudge1</name></author><summary>易班是一个整合微博、微信、BBS、@#￥%……的全能社交应用，跟校内网（现在是人人网）比较像，不过只能由在校学生注册。不过有些大学同学就抱怨“为什么强制注册易班”（有的学校甚至拿它和考核挂钩），“是不是有背景”……事实是什么样的呢？

作为不归学校管的局外人，写点“伪客观伪公正”的东西吧。</summary></entry><entry><title>终端装13利器——zsh、powerline和tmux</title><link href="https://vjudge1.github.io/2016/01/30/zsh-and-powerline.html" rel="alternate" type="text/html" title="终端装13利器——zsh、powerline和tmux" /><published>2016-01-30T00:00:00+08:00</published><updated>2016-01-30T00:00:00+08:00</updated><id>https://vjudge1.github.io/2016/01/30/zsh-and-powerline</id><content type="html" xml:base="https://vjudge1.github.io/2016/01/30/zsh-and-powerline.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#zsh&quot; id=&quot;markdown-toc-zsh&quot;&gt;zsh&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#wd&quot; id=&quot;markdown-toc-wd&quot;&gt;wd&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#powerline&quot; id=&quot;markdown-toc-powerline&quot;&gt;Powerline&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tmux&quot; id=&quot;markdown-toc-tmux&quot;&gt;tmux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;天天用终端，怎么能不搞搞插件呢？&lt;/p&gt;

&lt;h1 id=&quot;zsh&quot;&gt;zsh&lt;/h1&gt;

&lt;p&gt;Linux和Mac默认的shell是bash。作为拿来主义者，不如换用zsh，因为——oh-my-zsh，一堆现成的主题和插件。&lt;/p&gt;

&lt;p&gt;首先需要安装zsh（Mac自带），然后通过&lt;code class=&quot;highlighter-rouge&quot;&gt;chsh&lt;/code&gt;命令切换默认shell：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chsh -s /bin/zsh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接下来要安装oh-my-zsh。项目地址为：&lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot;&gt;https://github.com/robbyrussell/oh-my-zsh&lt;/a&gt;，命令不多，按照里面的说明操作即可。&lt;/p&gt;

&lt;p&gt;zsh的补全比较智能，而oh-my-zsh以插件形式提供了更多补全，例如gem，可以在&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.oh-my-zsh/plugins&lt;/code&gt;中看看到底有哪些插件。&lt;/p&gt;

&lt;p&gt;在项目&lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh/wiki/themes&quot;&gt;wiki页面&lt;/a&gt;里面有主题的预览效果。部分高端大气上档次的主题需要安装Powerline字体。&lt;/p&gt;

&lt;h2 id=&quot;wd&quot;&gt;wd&lt;/h2&gt;

&lt;p&gt;wd是oh-my-zsh提供的一个插件，用于给路径加标签，快速切换路径。例如&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wd add a    （给当前路径加标签）
wd a        （快速切换路径）
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果成天cd那么几个固定路径，那么用wd会更方便。&lt;/p&gt;

&lt;h1 id=&quot;powerline&quot;&gt;Powerline&lt;/h1&gt;

&lt;p&gt;Powerline可以在shell、vim等软件中显示状态栏，例如下图的状态栏就是Powerline+tmux配合的效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/2618447/6316861/70f3c4ce-ba03-11e4-88a5-0b423dd5a2ce.png&quot; alt=&quot;powerline&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Powerline的安装其实不难，不过因为我使用MacPorts，文档里有些地方写得不明白，结果试了半天才工作。&lt;/p&gt;

&lt;p&gt;首先需要安装&lt;a href=&quot;https://github.com/powerline/fonts&quot;&gt;Powerline专用字体&lt;/a&gt;，否则装完之后终端里面会出现一堆麻将牌。这些字体不用全部下载，挑个好看的就行。设置完之后设置成默认字体。&lt;/p&gt;

&lt;p&gt;然后&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install powerline-status
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;因为官方说明没讲清楚，所以接下来我没按官方说明操作——&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/powerline/powerline
cd powerline/powerline
python build.py
# 请把以下路径换成你自己的Python库
sudo mkdir /usr/lib/python2.7/site-packages/scripts
sudo cp ./build/* /usr/lib/python2.7/site-packages/scripts
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;打开&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.zshrc&lt;/code&gt;，加入&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export TERM=xterm-256color
source /usr/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;并且把刚建立的scripts目录放入PATH中。&lt;/p&gt;

&lt;p&gt;如果这样还报”Bad file descriptor”的错，可以在加载Powerline支持之前，手动启动一下powerline-daemon：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;wc -l &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ps ax | grep powerline-daemon&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; -lt 2 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;powerline-daemon-2.7
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;最后，遇到问题的话，可以到&lt;a href=&quot;https://powerline.readthedocs.org/en/latest/&quot;&gt;Powerline文档&lt;/a&gt;里面找找答案。对了，不要在Cygwin里试，除非你喜欢卡顿的感觉……&lt;/p&gt;

&lt;h1 id=&quot;tmux&quot;&gt;tmux&lt;/h1&gt;

&lt;p&gt;tmux是一个强大的终端分屏软件，本文就是利用它给终端加个状态栏。&lt;/p&gt;

&lt;p&gt;光安装tmux，终端底下是不会出现那个炫酷的状态栏的，所以我们要把Powerline也请来：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir ~/.config
cd ~/.config
git clone https://github.com/erikw/tmux-powerline
cp /usr/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf ~/.tmux.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.tmux.conf&lt;/code&gt;中，把powerline.sh的位置改成刚下载的路径（~/.config/tmux-powerline）中，输入tmux即可看到效果。记得把终端窗口拉长一点。&lt;/p&gt;

&lt;p&gt;如果对状态栏内容和样式不满意，可以自己改脚本配置一下。配置好之后，就可以把终端模拟器的默认启动程序从shell改成tmux了。不过tmux在需要滚屏的时候不太方便，所以，如果终端支持（例如我换用了iTerm），可以开启类似于“Save lines to scrollback …”功能，这样就可以继续通过滚屏看历史记录。&lt;/p&gt;</content><author><name>vjudge1</name></author><category term="插件" /><summary>天天用终端，怎么能不搞搞插件呢？</summary></entry><entry><title>Atom编辑器插件推荐</title><link href="https://vjudge1.github.io/2016/01/26/atom-plugins.html" rel="alternate" type="text/html" title="Atom编辑器插件推荐" /><published>2016-01-26T00:00:00+08:00</published><updated>2016-01-26T00:00:00+08:00</updated><id>https://vjudge1.github.io/2016/01/26/atom-plugins</id><content type="html" xml:base="https://vjudge1.github.io/2016/01/26/atom-plugins.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;语言无关&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;必备插件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;其他&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;按编程语言分&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#htmlcssjavascript&quot; id=&quot;markdown-toc-htmlcssjavascript&quot;&gt;HTML/CSS/JavaScript&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#html&quot; id=&quot;markdown-toc-html&quot;&gt;HTML&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#javascript&quot; id=&quot;markdown-toc-javascript&quot;&gt;JavaScript&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#nodejs&quot; id=&quot;markdown-toc-nodejs&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#typescript&quot; id=&quot;markdown-toc-typescript&quot;&gt;TypeScript&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#coffeescript&quot; id=&quot;markdown-toc-coffeescript&quot;&gt;CoffeeScript&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#python&quot; id=&quot;markdown-toc-python&quot;&gt;Python&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#php&quot; id=&quot;markdown-toc-php&quot;&gt;PHP&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ruby&quot; id=&quot;markdown-toc-ruby&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cc&quot; id=&quot;markdown-toc-cc&quot;&gt;C/C++&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#youcompleteme&quot; id=&quot;markdown-toc-youcompleteme&quot;&gt;YouCompleteMe&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#go&quot; id=&quot;markdown-toc-go&quot;&gt;Go&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#aspnet&quot; id=&quot;markdown-toc-aspnet&quot;&gt;ASP.NET&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Atom是由GitHub推出的文本编辑器，虽然比新一代的编辑器之神Sublime Text逊色一些，但毕竟不要钱也不弹窗（Sublime Text可以在不花钱的情况下无限期试用，只是偶尔会跳弹窗让你掏钱），就一直用了。&lt;/p&gt;

&lt;p&gt;即使用其他编辑器，有些内容也值得看一下，尤其是有&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f618.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;的——在别的编辑器中很可能有类似或同名（甚至同作者）的插件。&lt;/p&gt;

&lt;p&gt;暂时写这些。如果以后发现了哪个插件也不错，或者在生产时用上了，我会接着补充。（2016.1.25）&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;语言无关&lt;/h1&gt;

&lt;h2 id=&quot;section-1&quot;&gt;必备插件&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;atom-fix-path&lt;/code&gt;：Atom编辑器在Mac系统中有个bug（不能正确获取PATH变量的值），可以通过这个插件修复。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;highlight-selected&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;minimap-highlight-selected&lt;/code&gt;：选中变量之后，文件中其他相同变量名均被高亮。&lt;/li&gt;
  &lt;li&gt;&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f618.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;minimap&lt;/code&gt;：代码地图，必备插件。&lt;/li&gt;
  &lt;li&gt;&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f618.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt;：必备插件——随手写了一段代码，然后轻轻一按&lt;kbd&gt;⌘I&lt;/kbd&gt;（&lt;kbd&gt;Ctrl+I&lt;/kbd&gt;），代码就执行了！支持多种脚本语言，还支持C语言等（仅限于Mac）。它还支持自定义运行参数，以及“运行到光标处”（仅限部分语言）。
    &lt;ul&gt;
      &lt;li&gt;目前该插件还不支持从stdin读入，所以不要用此插件运行需要输入的程序。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;terminal-plus&lt;/code&gt;：在编辑器底下会出现一个“＋”，点击之后，一个shell，很方便。&lt;/li&gt;
  &lt;li&gt;&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f618.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vim-mode&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;ex-mode&lt;/code&gt;：谁才是“编辑器之神”？Vim！（因为Vim对于中文输入而言不太方便所以我没使用）&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;atom-beauity&lt;/code&gt;：代码美化只在&lt;kbd&gt;⌃⌥B&lt;/kbd&gt;（&lt;kbd&gt;Ctrl+Alt+B&lt;/kbd&gt;）一瞬间。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;其他&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;aligner&lt;/code&gt;：按下&lt;kbd&gt;⌃⌘/&lt;/kbd&gt;（&lt;kbd&gt;Ctrl+Alt+/&lt;/kbd&gt;），多行代码立马按等号对齐。对于SCSS、Python等语言还有对应插件，装完支持更多的对齐。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;build-tools&lt;/code&gt;：允许运行自定义工具（方便编译等）。编译和运行出现错误之后可以帮助定位。&lt;/li&gt;
  &lt;li&gt;&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f618.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dash&lt;/code&gt;：如果电脑上装了Dash、Zeal或Velocity（查询函数用法的软件），只要按下&lt;kbd&gt;⌃H&lt;/kbd&gt;（&lt;kbd&gt;Ctrl+H&lt;/kbd&gt;），这个插件就会帮你直接在那些软件中查函数用法。如果用双屏显示器，可以按&lt;kbd&gt;Shift&lt;/kbd&gt;避免编辑器失去焦点。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git-plus&lt;/code&gt;：不用手动敲Git命令了。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;todo-manager&lt;/code&gt;：帮你管理代码里的TODO、NOTE、FIXME。支持自定义规则，所以也可以用fuck调试，然后用这个插件定位和清除调试代码。需要安装&lt;code class=&quot;highlighter-rouge&quot;&gt;bottom-dock&lt;/code&gt;插件才能使用。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Sublime-Style-Column-Selection&lt;/code&gt;：有时候块选很有用，装上这个插件，就可以按住&lt;kbd&gt;⌥&lt;/kbd&gt;（&lt;kbd&gt;Alt&lt;/kbd&gt;）键拖动鼠标来块选。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pigments&lt;/code&gt;：自动将代码中各种表示颜色的符号染色。在“命令面板”中还可以找到其他与颜色有关的功能（以Pigments开头），例如显示调色板、列举代码中出现的所有颜色、转换颜色值为其他形式。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-3&quot;&gt;按编程语言分&lt;/h1&gt;

&lt;p&gt;不要一下子全都装上——本来Atom启动就慢，再装一大堆插件，简直没法用了……&lt;/p&gt;

&lt;p&gt;如果都装上了，可以选择性地禁用和启用某些插件。安装&lt;code class=&quot;highlighter-rouge&quot;&gt;package-list&lt;/code&gt;插件之后操作会更快一些。&lt;/p&gt;

&lt;p&gt;很多流行语言和框架都有Snippets（片段）。如果经常用某个框架，不妨到Atom官网上搜一下，把代码片段装上，也好在编码时节省时间。&lt;/p&gt;

&lt;h2 id=&quot;htmlcssjavascript&quot;&gt;HTML/CSS/JavaScript&lt;/h2&gt;

&lt;p&gt;装完下面的插件，大概能避免购买或使用盗版的WebStorm。&lt;/p&gt;

&lt;h3 id=&quot;html&quot;&gt;HTML&lt;/h3&gt;

&lt;p&gt;大家都知道HTML标签很啰嗦，所以应该没有人愿意这样写代码：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;panel&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Title&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Line1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Line2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果能像CSS选择器一样写，一按Tab自动产生HTML代码，该多好：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;div.panel&amp;gt;(div.title&amp;gt;p{Title})+(div.content&amp;gt;p{Line1}+p{Line2}+ul&amp;gt;li*5)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;所以，快装&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f618.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;emmet&lt;/code&gt;插件！&lt;/p&gt;

&lt;p&gt;这是一个专为写前端的人设计的编辑器插件，可以到&lt;a href=&quot;http://emmet.io/&quot;&gt;官网&lt;/a&gt;上面稍微学一下这个插件的用法。&lt;/p&gt;

&lt;p&gt;还有，Atom居然对HTML标签无动于衷！所以快装&lt;code class=&quot;highlighter-rouge&quot;&gt;autoclose-html&lt;/code&gt;插件，敲完标签之后自动闭合（还有一个&lt;code class=&quot;highlighter-rouge&quot;&gt;tag&lt;/code&gt;向Sublime Text致敬，是一键&lt;kbd&gt;⌥⌘.&lt;/kbd&gt;手动闭合）。&lt;/p&gt;

&lt;h3 id=&quot;javascript&quot;&gt;JavaScript&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f618.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;atom-ternjs&lt;/code&gt;：以TernJS为后端的JavaScript自动提示。在使用之前需要按照说明稍微配置一下，然后才能用于jQuery、Angular.js、RequireJS、Node.js、Express.js等乱七八糟的js。
    &lt;ul&gt;
      &lt;li&gt;此外&lt;code class=&quot;highlighter-rouge&quot;&gt;you-complete-me&lt;/code&gt;也支持js，不过它的配置比较麻烦，而且需要手工装ternjs。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f618.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;linter-jshint&lt;/code&gt;：检查代码不规范之处，具体配置方法可以看插件文档。需要同时安装&lt;code class=&quot;highlighter-rouge&quot;&gt;linter&lt;/code&gt;插件。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;nodejs&quot;&gt;Node.js&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;atom-ternjs&lt;/code&gt;支持Node.js，也支持Express.js等框架，不过需要按照插件文档手动安装一下支持文件。此外也可以到&lt;a href=&quot;https://npmjs.org&quot;&gt;npmjs.org&lt;/a&gt;上面查以“Tern”开头的插件以获得更多支持。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;安装&lt;code class=&quot;highlighter-rouge&quot;&gt;atom-jade&lt;/code&gt;可以给jade加语法高亮，不过没有自动完成功能。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;typescript&quot;&gt;TypeScript&lt;/h4&gt;

&lt;p&gt;&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f618.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;atom-typescript&lt;/code&gt;，官方出品，不解释。&lt;/p&gt;

&lt;h4 id=&quot;coffeescript&quot;&gt;CoffeeScript&lt;/h4&gt;

&lt;p&gt;TernJS不支持CoffeeScript。有人曾经想通过Hack的形式让tern支持CoffeeScript，不过tern官方不打算支持，而且那个项目烂尾了……&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;coffee-complete&lt;/code&gt;：可以一键把CoffeeScript代码编译成JavaScript代码。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;python&quot;&gt;Python&lt;/h2&gt;

&lt;p&gt;（未完待续）&lt;/p&gt;

&lt;p&gt;大概能避免花钱买PyCharm了。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;autocomplete-python&lt;/code&gt;：Python的自动完成功能。支持Django等。也可以使用YouCompleteMe，具体装法见后文。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;linter-flake8&lt;/code&gt;：Python语言的Linter。需要通过pip安装flake8（通过手工指定路径来切换2和3），然后通过apm安装linter。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;python-nosetests&lt;/code&gt;：按下&lt;kbd&gt;F5&lt;/kbd&gt;，自动开始测试。测试框架是nose，所以需要事先通过pip装好。至于如何区分2和3，这就需要看文档了。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;atom-python-debugger&lt;/code&gt;：一键插入和删除&lt;code class=&quot;highlighter-rouge&quot;&gt;ipdb.set_trace()&lt;/code&gt;语句。需要通过pip安装ipdb。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;php&quot;&gt;PHP&lt;/h2&gt;

&lt;h2 id=&quot;ruby&quot;&gt;Ruby&lt;/h2&gt;

&lt;h2 id=&quot;cc&quot;&gt;C/C++&lt;/h2&gt;

&lt;h3 id=&quot;youcompleteme&quot;&gt;YouCompleteMe&lt;/h3&gt;

&lt;p&gt;Vim有一必备插件，叫做&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:kissing_heart:&quot; alt=&quot;:kissing_heart:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f618.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f618.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;“YouCompleteMe”，后来作者把插件核心功能做成API，就可以给其他编辑器用了，比如在Atom中这个插件叫做&lt;code class=&quot;highlighter-rouge&quot;&gt;you-complete-me&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;这个插件的配置比较麻烦，可以参照&lt;a href=&quot;https://github.com/Valloric/YouCompleteMe&quot;&gt;YouCompleteMe说明&lt;/a&gt;和&lt;a href=&quot;https://github.com/Valloric/ycmd&quot;&gt;ycmd说明&lt;/a&gt;来配置一下。下面是一些注意事项：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;网上很多教程都是基于Vim的，不过换成别的编辑器也没啥太大区别，照做就行了。&lt;/li&gt;
  &lt;li&gt;需要clang编译器。&lt;/li&gt;
  &lt;li&gt;Mac系统自带的Python是2.6的，插件会直接崩掉，所以需要装2.7（不要用3），然后让程序走2.7。如果嫌麻烦，也可以直接把系统自带的Python换掉，不过对于10.11系统来说，得先把SIP功能屏蔽，要不然即使有root也改不了。&lt;/li&gt;
  &lt;li&gt;在家目录中放一个&lt;code class=&quot;highlighter-rouge&quot;&gt;.ycm_extra_conf.py&lt;/code&gt;。可以参照&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.vim/bundle/YouCompleteMe/cpp/ycm/.ycm_extra_conf.py&lt;/code&gt;修改。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;go&quot;&gt;Go&lt;/h2&gt;

&lt;h2 id=&quot;aspnet&quot;&gt;ASP.NET&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;you-complete-me&lt;/code&gt;是一个代码完成插件，支持C#，不过配置比较麻烦（具体装法看前文，需要事先把Mono装好）。所以不如用其他原生支持ASP.NET的跨平台的开发环境，例如：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Xamarin Studio（在Linux中叫做MonoDevelop）&lt;/li&gt;
  &lt;li&gt;Visual Studio Code（官方出品，不过目前还是Beta版）&lt;/li&gt;
&lt;/ul&gt;</content><author><name>vjudge1</name></author><category term="插件" /><summary>Atom是由GitHub推出的文本编辑器，虽然比新一代的编辑器之神Sublime Text逊色一些，但毕竟不要钱也不弹窗（Sublime Text可以在不花钱的情况下无限期试用，只是偶尔会跳弹窗让你掏钱），就一直用了。

即使用其他编辑器，有些内容也值得看一下，尤其是有:kissing_heart:的——在别的编辑器中很可能有类似或同名（甚至同作者）的插件。

暂时写这些。如果以后发现了哪个插件也不错，或者在生产时用上了，我会接着补充。（2016.1.25）</summary></entry><entry><title>Chrome插件推荐</title><link href="https://vjudge1.github.io/2016/01/25/chrome-plugins.html" rel="alternate" type="text/html" title="Chrome插件推荐" /><published>2016-01-25T00:00:00+08:00</published><updated>2016-01-25T00:00:00+08:00</updated><id>https://vjudge1.github.io/2016/01/25/chrome-plugins</id><content type="html" xml:base="https://vjudge1.github.io/2016/01/25/chrome-plugins.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#rss&quot; id=&quot;markdown-toc-rss&quot;&gt;RSS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#gooreplacer&quot; id=&quot;markdown-toc-gooreplacer&quot;&gt;gooreplacer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;印象笔记&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tampermonkey&quot; id=&quot;markdown-toc-tampermonkey&quot;&gt;Tampermonkey&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#devdocs&quot; id=&quot;markdown-toc-devdocs&quot;&gt;DevDocs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#adblock-plus&quot; id=&quot;markdown-toc-adblock-plus&quot;&gt;Adblock Plus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#proxy-switchysharp&quot; id=&quot;markdown-toc-proxy-switchysharp&quot;&gt;Proxy SwitchySharp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;开发人员工具&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;其他&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;记录一些我在Chrome浏览器使用的插件。&lt;/p&gt;

&lt;p&gt;Chrome和火狐是最好的浏览器。因为Chromium是开源产品，所以那些国铲浏览器基本上都是IE+Chromium的双核浏览器，而且很多Native WebApp也基于Chromium，例如Atom编辑器（还有Node.js）。&lt;/p&gt;

&lt;h1 id=&quot;rss&quot;&gt;RSS&lt;/h1&gt;

&lt;p&gt;以前每天都会刷&lt;a href=&quot;http://www.lihuanyu.com&quot;&gt;某神&lt;/a&gt;的博客，看看有没有什么新文章，直到注意到了RSS。通过RSS订阅博客或什么东西，就没有必要自己手动去刷动态了——有新内容程序会自动提示。&lt;/p&gt;

&lt;p&gt;一个比较好的RSS插件是&lt;code class=&quot;highlighter-rouge&quot;&gt;RSS Feed Reader&lt;/code&gt;：添加之后地址栏右面会有RSS的标志，如果页面可以通过RSS订阅，图标上会出现一个加号。有新动态的时候也会有提示，可以直接阅读。&lt;/p&gt;

&lt;p&gt;不过，因为手头有两个电脑和一堆操作系统，而这个插件需要花钱才能在云端同步，所以再推荐一个插件，&lt;code class=&quot;highlighter-rouge&quot;&gt;Inoreader&lt;/code&gt;，它就是云端服务，而且抓取频率也不错。Feedly是类似的服务，但是不花钱的话它每隔两三个小时才抓一次。&lt;/p&gt;

&lt;p&gt;使用云端服务有一个小小问题：墙。如果像我一样已经意识不到自己在翻墙，可以无视这个问题。&lt;/p&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;社交网站&lt;/h4&gt;

&lt;p&gt;国外很多网站都支持RSS，包括维基百科（监视列表）和社交网站Facebook。不过国内网站就不行了，例如微博不提供RSS功能，而且不小心被女神&lt;span class=&quot;blackout&quot;&gt;曾经是男神&lt;/span&gt;拉黑了（目测是被当作广告账号了），所以怎样才能科学地关注女神呢？答案——&lt;a href=&quot;http://sinacn.weibodangan.com/&quot;&gt;微博档案&lt;/a&gt;，从这个网站上面订阅微博。&lt;/p&gt;
&lt;/div&gt;

&lt;h1 id=&quot;gooreplacer&quot;&gt;gooreplacer&lt;/h1&gt;

&lt;p&gt;既然自己都意识不到自己在翻墙，还要这个插件做什么呢？&lt;/p&gt;

&lt;p&gt;可以用来在Chrome上登录那个只支持旧版IE的教务系统！就像&lt;a href=&quot;/2015/05/29/let-jiao-wu-xi-tong-support-linux.html&quot;&gt;这样&lt;/a&gt;！&lt;/p&gt;

&lt;p&gt;如果想给某个网站（例如只支持IE，或者有什么限制）打补丁，或者某网站经常用但是CDN因为墙而无法正常访问，你还不是站长，可以试试这个插件。&lt;/p&gt;

&lt;p&gt;稍微提一下，可以把hack之后的文件放到GitHub Pages上面。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;印象笔记&lt;/h1&gt;

&lt;p&gt;在网上看到篇不错的文章，当然要保存下来！&lt;/p&gt;

&lt;p&gt;我用的是Evernote。在浏览器上装个插件，看到不错的东西时，直接点“剪藏”就可以决定保存什么东西了。&lt;/p&gt;

&lt;p&gt;由于审查的原因，Evernote有两套账号，分为国内版和国际版。如果不需要像异见人士那样公开地贴出自己的笔记，用国内版（印象笔记）就行了。国内版就是比国内版少个公开分享，而且国际版经常掉线。&lt;/p&gt;

&lt;p&gt;其实OneNote也可以，只不过嫌它占地方而已。（提示：OneNote有OCR，可以扫图片上的文字）&lt;/p&gt;

&lt;h1 id=&quot;tampermonkey&quot;&gt;Tampermonkey&lt;/h1&gt;

&lt;p&gt;这个插件本意是提供无障碍访问。它可以在网页加载之后运行用户自定义脚本。&lt;/p&gt;

&lt;p&gt;既然我们没有障碍，那么能做什么事儿呢？&lt;/p&gt;

&lt;p&gt;反正我拿它下载Youtube视频，&lt;a href=&quot;https://sf-addon.com/helper/chrome/helper.user.js?ts=1453720999&quot;&gt;虽然代码不是自己写的&lt;/a&gt;……（因为Google禁止一切能够下载Youtube视频的插件，所以他们只能“曲线救国”。当然，这段代码也无法通过Chrome下载）&lt;/p&gt;

&lt;h1 id=&quot;devdocs&quot;&gt;DevDocs&lt;/h1&gt;

&lt;p&gt;其实&lt;a href=&quot;http://devdocs.io&quot;&gt;DevDocs&lt;/a&gt;是一个网站，不过Chrome可以好心地帮你把这个网站放到LaunchPad上面。&lt;/p&gt;

&lt;p&gt;通过HTML5的LocalStorage，DevDocs支持离线浏览。&lt;/p&gt;

&lt;p&gt;这个网站有两个小问题：一个是墙，一个是没有Java和ASP.NET的文档！&lt;/p&gt;

&lt;h1 id=&quot;adblock-plus&quot;&gt;Adblock Plus&lt;/h1&gt;

&lt;p&gt;我不屏蔽广告，所以差点把这个插件忘了……&lt;/p&gt;

&lt;h1 id=&quot;proxy-switchysharp&quot;&gt;Proxy SwitchySharp&lt;/h1&gt;

&lt;p&gt;用于给浏览器设置代理。支持多种代理，包括PAC。&lt;/p&gt;

&lt;p&gt;因为我给整个系统都设了PAC所以没装。&lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;开发人员工具&lt;/h1&gt;

&lt;p&gt;这不是插件但很重要……&lt;/p&gt;

&lt;h1 id=&quot;section-2&quot;&gt;其他&lt;/h1&gt;

&lt;p&gt;既然能看得懂残体字，为什么不到知乎上面看看&lt;a href=&quot;https://www.zhihu.com/question/19594682&quot;&gt;网友的回答&lt;/a&gt;呢？&lt;/p&gt;</content><author><name>vjudge1</name></author><category term="插件" /><summary>记录一些我在Chrome浏览器使用的插件。

Chrome和火狐是最好的浏览器。因为Chromium是开源产品，所以那些国铲浏览器基本上都是IE+Chromium的双核浏览器，而且很多Native WebApp也基于Chromium，例如Atom编辑器（还有Node.js）。</summary></entry><entry><title>解决Win8/10因为xlive.dll玩不了游戏的问题</title><link href="https://vjudge1.github.io/2016/01/01/xlive-dll.html" rel="alternate" type="text/html" title="解决Win8/10因为xlive.dll玩不了游戏的问题" /><published>2016-01-01T00:00:00+08:00</published><updated>2016-01-01T00:00:00+08:00</updated><id>https://vjudge1.github.io/2016/01/01/xlive-dll</id><content type="html" xml:base="https://vjudge1.github.io/2016/01/01/xlive-dll.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;中文版&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#fix-the-xlivedll-issues-under-windows-810&quot; id=&quot;markdown-toc-fix-the-xlivedll-issues-under-windows-810&quot;&gt;Fix the xlive.dll issues under Windows 8/10&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;趁着Steam圣诞节优惠，我入手了除了GTA5以外的所有版本（旧版本成捆卖）。为什么不买GTA5？因为GTA5发布没多久，即使打折价格也略贵，而且自己电脑跑不动……&lt;/p&gt;

&lt;p&gt;Win10 64位系统，结果GTA4根本打不开，屏幕提示的错误信息与xlive.dll有关。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;中文版&lt;/h1&gt;

&lt;p&gt;拜托啊，花钱买正版，结果还不如直接下破解版……&lt;/p&gt;

&lt;p&gt;在安装运行库的时候系统就有提示，Steam提供的gfw（Games for Windows Live，不是那个通向共产主义的大门）版本有点旧，不兼容Win8/10。幸运的是，这个问题可以解决，只要：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;先到“控制面板”里把跟gfw有关的都卸载。&lt;/li&gt;
  &lt;li&gt;下载并安装最新版“Games for Windows”（&lt;a href=&quot;https://www.microsoft.com/en-hk/download/details.aspx?id=5549&quot;&gt;点这里下载&lt;/a&gt;），版本号应该是3.5.xx。相信英文不好的也不会花钱买正版游戏。&lt;/li&gt;
  &lt;li&gt;玩游戏吧。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;值得一提的是，尽管GTA5打完折还是不太便宜，不过比那个价格死贵、从不打折、画质“渣”成马赛克而且有个绿色的长得像&lt;code class=&quot;highlighter-rouge&quot;&gt;18禁&lt;/code&gt;的怪物的世界好多了……&lt;/p&gt;

&lt;h1 id=&quot;fix-the-xlivedll-issues-under-windows-810&quot;&gt;Fix the xlive.dll issues under Windows 8/10&lt;/h1&gt;

&lt;p&gt;I’m using Windows 10 64-bit. When I open GTA4 that I have bought during the Christmas, an error message about &lt;code class=&quot;highlighter-rouge&quot;&gt;xlive.dll&lt;/code&gt; showed up.&lt;/p&gt;

&lt;p&gt;That is because gfw (Games for Windows) from Steam is outdated. You need to uninstall them from Control Panel, and install &lt;a href=&quot;https://www.microsoft.com/en-hk/download/details.aspx?id=5549&quot;&gt;the newest one&lt;/a&gt;. It’s called “Games for Windows” and the version is larger than or equal to &lt;code class=&quot;highlighter-rouge&quot;&gt;3.5&lt;/code&gt;.&lt;/p&gt;</content><author><name>vjudge1</name></author><summary>趁着Steam圣诞节优惠，我入手了除了GTA5以外的所有版本（旧版本成捆卖）。为什么不买GTA5？因为GTA5发布没多久，即使打折价格也略贵，而且自己电脑跑不动……

Win10 64位系统，结果GTA4根本打不开，屏幕提示的错误信息与xlive.dll有关。</summary></entry><entry><title>如何学习C语言（非计算机专业）</title><link href="https://vjudge1.github.io/2015/12/30/learn-c.html" rel="alternate" type="text/html" title="如何学习C语言（非计算机专业）" /><published>2015-12-30T00:00:00+08:00</published><updated>2015-12-30T00:00:00+08:00</updated><id>https://vjudge1.github.io/2015/12/30/learn-c</id><content type="html" xml:base="https://vjudge1.github.io/2015/12/30/learn-c.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#first&quot; id=&quot;markdown-toc-first&quot;&gt;FIRST&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;如何学习&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;新思维&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;先问搜索引擎&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;照猫画虎&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;一一对应&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-5&quot; id=&quot;markdown-toc-section-5&quot;&gt;多试验&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-6&quot; id=&quot;markdown-toc-section-6&quot;&gt;调试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-7&quot; id=&quot;markdown-toc-section-7&quot;&gt;测试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-8&quot; id=&quot;markdown-toc-section-8&quot;&gt;养成好习惯&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-9&quot; id=&quot;markdown-toc-section-9&quot;&gt;如何通过二级&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-10&quot; id=&quot;markdown-toc-section-10&quot;&gt;基本内容&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-11&quot; id=&quot;markdown-toc-section-11&quot;&gt;选择题&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-12&quot; id=&quot;markdown-toc-section-12&quot;&gt;大题&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#section-13&quot; id=&quot;markdown-toc-section-13&quot;&gt;正确解答题目&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-14&quot; id=&quot;markdown-toc-section-14&quot;&gt;正确地解答题目&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-15&quot; id=&quot;markdown-toc-section-15&quot;&gt;拓展学习&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个问题曾经专门给人做过讲座。不过既然有人&lt;span class=&quot;blackout&quot;&gt;例如学妹&lt;/span&gt;没听过，那我还是把自己的经验感悟写出来吧。&lt;/p&gt;

&lt;p&gt;说实话，现代人都比较功利——既然是非计算机专业的学生，那么C语言基本上是个用不着的东西。可是，它还是门必修课，那最起码不能挂科，对吧？&lt;/p&gt;

&lt;p&gt;内容很长，最好找个时间慢慢读。&lt;/p&gt;

&lt;h1 id=&quot;first&quot;&gt;FIRST&lt;/h1&gt;

&lt;p&gt;稍微了解一下C语言的历史，你就应该知道那个东西绝不是给孩子们入门用的——一开始它的应用是Unix操作系统。&lt;/p&gt;

&lt;p&gt;从这个角度讲，对于非计算机专业的学生来说，Pascal甚至Basic都比C语言靠谱。因为C语言对于他们而言过于灵活，暴露了很多让初学者迷惑的东西。而Pascal和Basic都很简单，而且Visual Basic还很好玩。&lt;/p&gt;

&lt;p&gt;当然，虽然VB又简单又好玩，但是有人&lt;span class=&quot;blackout&quot;&gt;我们的老师&lt;/span&gt;成功地把VB讲成了一个比C语言还困难的语言，而且不是因为内容深，而是&lt;span class=&quot;blackout&quot;&gt;讲得不好&lt;/span&gt;……。由此可见，&lt;strong&gt;编程语言学不好是自己的问题——没找到合适的入门教程&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;很多人喜欢看清华大学出版社的谭浩强的书。不要以为清华大学出版社的书有多么好，特别是&lt;strong&gt;绝对不要看谭浩强的C和C++书&lt;/strong&gt;！这里绝对不是抹黑他——80年代的时候，谭浩强写了一系列关于BASIC语言的书，为编程语言在中国的普及做出了贡献。然而，C语言可不像BASIC那样简单，而且他自己都没学明白，他的书怎么可能讲明白？结果就是，他的C语言书不仅讲不明白，而且还误导人。&lt;/p&gt;

&lt;p&gt;如果有闲功夫的话，可以拜读一下C语言之父Dennis Ritchie（dmr）的《C程序设计语言》。这本入门书比大多数国产C语言书薄，但是是一部经典。毕竟是C语言亲爹写的。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;如何学习&lt;/h1&gt;

&lt;p&gt;回答“只要多努力……”、“只要多练习……”当然没有意义，所以下面写一些个人经验。&lt;/p&gt;

&lt;p&gt;注意，本文有一个前提——“非计算机专业”。因此我假设学完C语言基本上是为了通过考试和二级。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;新思维&lt;/h2&gt;

&lt;p&gt;大学每一科目都有自己的思维方式，C语言也一样。&lt;/p&gt;

&lt;p&gt;C语言作为一门“语言”，当然有自己的语法，只不过是人类和机器约定好的、互相都能看得懂的语法。人类可以一目十行，但是对于机器而言，它只能一行一行地读、一句一句地读。&lt;/p&gt;

&lt;p&gt;如果把每一条语句当作一件事儿，那么计算机当然是有条不紊地做事儿。写代码的时候，你当然也要一件事儿一件事儿地做。&lt;/p&gt;

&lt;p&gt;因为我们学的是简单的单文件的C语言，所以实际上代码结构基本都是这样的：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 输入
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;scanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 处理
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 输出
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;做题的时候（编写练习程序和做题类似），按照题目要求逐步完善输入、处理和输出过程。也就是按照题目要求填坑。至于能不能填上，就看你积累了多少“段子”——这和多做数学题积攒解题思路是差不多的。&lt;/p&gt;

&lt;p&gt;填坑的时候有一个技巧：如果遇到困难，尽量先把题目的语言翻译成“像C语言的东西”。例如，“判断n是否为XX数，如果是则输出YES和全部的xxx，否则输出‘NO’”。那么首先应该能够想到，“判断”是if，因此：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;是&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;XX&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;YES&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 输出全部的xxx
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;全部&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;NO&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;那什么是“XX数”呢？看题目其他条件，例如“一个数恰好等于因子之和”，那么if语句应该是&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;的因子之和&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;“因子”之和怎么求呢？按照以往的练习，因子是用for语句找的，所以在if之前最起码得有个for语句：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;是因子&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 不要忘记前面 sum=0
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;“是因子”实际上就是整除，即“n%i==0”。&lt;/p&gt;

&lt;p&gt;假如题目还需要输出所有因子。毕竟不是ACM比赛，对性能也没有太高要求，那么我们不妨在找因子的时候把类似代码再敲一遍。&lt;/p&gt;

&lt;p&gt;最后检查一下输入输出格式，把细节完善（见后面的“一一对应”），然后测试、调试，一切OK就可以提交了。如果考试是笔试，实在遇到困难，也可以用类似方法骗分。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;先问搜索引擎&lt;/h2&gt;

&lt;p&gt;问问题是一门艺术。在错误的时间、错误的地点找错误的人问了错误的问题，那是要失败的。&lt;/p&gt;

&lt;p&gt;学习编程会遇到很多问题，例如不会搭建开发环境、忘记某个函数的名字或参数、遇到错误，这时候不建议马上去问别人。不妨先自己尝试解决，如果解决不了，再到搜索引擎上搜索。&lt;/p&gt;

&lt;p&gt;如果不会使用搜索引擎，可以&lt;a href=&quot;https://vjudge1.github.io/kuso/sos/?wd=%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E&quot;&gt;点击这里&lt;/a&gt;查看动画演示。&lt;/p&gt;

&lt;p&gt;因为大多数语言和框架（在开发项目时，从零开始是不理智的）是老外写的，对于某些问题，如果你用英文搜索，可能会更快得到结果。这时候你可能就要想办法找谷歌了。&lt;/p&gt;

&lt;p&gt;在技术方面的中文搜索中，百度和谷歌区别不太大。百度经常有误导人的推广，但是在技术话题上这个问题并不明显。&lt;/p&gt;

&lt;p&gt;在英文搜素方面，百度几乎不可用。谷歌最好（直接与StackOverflow整合），如果在网络方面遇到困难，也可以考虑必应。当然，因为很多外国网站使用谷歌服务器来加速（CDN），所以点进链接后可能会卡半天不出内容。遭遇这种情况的话，你还是需要先把网络问题解决一下。&lt;/p&gt;

&lt;p&gt;因为全世界包括那个没有国际互联网&lt;span class=&quot;blackout&quot;&gt;只对老外和少数特权人士开放&lt;/span&gt;的朝鲜都使用C语言，因此搜C语言本身的东西不会遇到太大困难。&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;照猫画虎&lt;/h2&gt;

&lt;p&gt;不要问别人“xxx怎么写”——照着书上的代码改，或者到搜索引擎上找代码，照着他们的代码改。&lt;/p&gt;

&lt;p&gt;学习一门编程语言，很多时候找个老师不如&lt;strong&gt;找一段示例代码，照着敲一遍，编译运行，观察现象，然后对代码稍作修改，编译运行，观察产生了什么变化……&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;需要注意的是，有些东西涉及算法（应该都是简单算法，不涉及数据结构），例如简单素数判断&lt;span class=&quot;blackout&quot;&gt;（素数测试有很多种）&lt;/span&gt;。那么你需要找到一些现成的代码，搞清楚处理过程中哪些变量是输入、哪些是结果，了解大致的思路，然后自己写一遍。这种东西务必亲自上机写一遍，哪怕没有完全理解——光靠背是不现实的。&lt;/p&gt;

&lt;p&gt;因为很多算法的套路是固定的，因此建议学过函数之后，自己编程的时候把它们都扔到函数里，例如：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;is_prime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在使用的时候直接&lt;code class=&quot;highlighter-rouge&quot;&gt;is_prime(a)&lt;/code&gt;，既方便又避免出错。&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;一一对应&lt;/h2&gt;

&lt;p&gt;编程是个比较严谨的东西。初学者在写代码的时候，为了避免出错，要注意“一一对应”：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;解答题目的时候，你的代码是否和题目条件、输入输出格式要求对应？&lt;/li&gt;
  &lt;li&gt;该写分号的地方是否写分号了？&lt;/li&gt;
  &lt;li&gt;不该写分号的地方是不是没写？（例如for (…;…;…)的后面不应该写，如果故意要写，最好用个注释说明一下）&lt;/li&gt;
  &lt;li&gt;printf、scanf中的“%d”（或别的什么）是否和后面的变量一一对应？&lt;/li&gt;
  &lt;li&gt;假如后面不是int类型，你前面是否还在用“%d”？&lt;/li&gt;
  &lt;li&gt;scanf后面有没有“&amp;amp;”？&lt;/li&gt;
  &lt;li&gt;int main()、if、while、for等的圆括号是否匹配？后面是否跟了“{”和“}”并且数量匹配？
    &lt;ul&gt;
      &lt;li&gt;虽然if、while、for后面代码只有一句时可以省略花括号，但是强烈建议你不要偷这个懒。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;在使用变量的时候，前面是否已经定义了？（例如要scanf n了，前面是否有int n？按照题目要求是不是应该为int？）&lt;/li&gt;
  &lt;li&gt;在使用“++”、“–”、“+=”等符号的时候，前面是否已经初始化了？初始化的值和初始化的位置是否正确？&lt;/li&gt;
  &lt;li&gt;数组大小是否不比题目要求的小？
    &lt;ul&gt;
      &lt;li&gt;为了安全，建议开大点。例如题目说最大100，你就开110甚至是11000。反正贪污和浪费内存不是极大的犯罪（by 毛泽西）。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;头文件都写全了吗？
    &lt;ul&gt;
      &lt;li&gt;为了安全，可以把你听说过的标准库的头文件都写上。ACM比赛经常有这样做的：#include的行数比代码实现的行数都多……&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-5&quot;&gt;多试验&lt;/h2&gt;

&lt;p&gt;别怕试验。多写一些小片段，看看那些代码是怎样运行的。&lt;/p&gt;

&lt;p&gt;举个例子——for循环到底执行了多少次：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;A&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;i=%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;B&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;i=%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;scanf和gets的冲突：scanf和get紧挨着可能在输入数据时遇到问题，这时候需要一个小技巧……&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;n&quot;&gt;scanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fgets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// 其实就是 gets(str) 的推荐写法
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;如果那个&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scanf&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;里没有“\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gets&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;的时候……&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;再举个例子（指针与一维数组）：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;因为只是为了看个结果，所以，只要自己能把结果弄明白，怎么舒服怎么来。&lt;/p&gt;

&lt;p&gt;（当然有个重要前提——你手头得有个电脑。如果没有，可以买个Win10平板，只需要几百块钱，比手机便宜，又方便又实惠……当然装Linux系统可能会遇到困难）&lt;/p&gt;

&lt;h2 id=&quot;section-6&quot;&gt;调试&lt;/h2&gt;

&lt;p&gt;经常有人问“为什么我的代码结果不对”，然后贴上一段代码。这是非常令人讨厌的行为。&lt;/p&gt;

&lt;p&gt;为了不被人鄙视，大家应该学一些调试的技巧。&lt;/p&gt;

&lt;p&gt;作为非专业人士，与其学习那些复杂又难用的调试工具，不如学习又简单又实用的 printf。&lt;/p&gt;

&lt;p&gt;printf有两大作用：定位错误、查看中间值。&lt;/p&gt;

&lt;p&gt;假如程序崩溃了，可以这样调试：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;准备读n&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;scanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;准备读a&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;scanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;开始处理&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;假如崩溃的时候屏幕上面只有“准备读n”而没有“准备读a”，说明中间夹着的scanf有问题；假如崩溃的时候有“准备读a”而没有“开始处理”，说明中间夹着的for有问题，这样你可以在for语句内部插入一些&lt;code class=&quot;highlighter-rouge&quot;&gt;printf(&quot;a\n&quot;)&lt;/code&gt;，从而精确地找到错误的出处（例如，崩溃的时候看到10个a，说明数组开得不够大）。&lt;/p&gt;

&lt;p&gt;如果计算结果不正确，可以这样调试（筛法求素数）：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isprime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;isprime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DEBUG: %d不是素数(╯°Д°)╯︵ ┻━┻&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;isprime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DEBUG: %d 是素数吗？%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isprime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isprime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;运行结果只有2和3。通过观察调试输出，发现程序认为5不是素数。按理说，如果不是素数，屏幕会输出一个掀桌子的表情。然而程序认为5不是素数，但是还没有掀桌子表情，说明问题出在isprime变量上面——&lt;code class=&quot;highlighter-rouge&quot;&gt;isprime=1&lt;/code&gt;的位置不对。&lt;/p&gt;

&lt;p&gt;当然，交作业的时候别忘了把这种输出删掉。&lt;/p&gt;

&lt;h2 id=&quot;section-7&quot;&gt;测试&lt;/h2&gt;

&lt;p&gt;不要把测试和调试搞混。用一句话概括它们的区别：测试是为了观察“程序结果是否正确”，而调试是为了“找到程序的错误”。&lt;/p&gt;

&lt;p&gt;很多初学者经常不做测试，或者不做充分的测试就提交，然后遇到问题就反复改，反复提交。这样也是不好的。&lt;/p&gt;

&lt;p&gt;Online Judge就是测试的一种：系统预置了一系列数据和答案，按照题目要求解题、提交，系统会自动编译和运行代码，检查程序是否能在规定时间内处理预定输入并得到正确结果。在比赛中，错误提交是要影响成绩的，因此选手必须要学会自己测试，争取一次提交就通过。&lt;/p&gt;

&lt;p&gt;程序编译通过之后，当然要用数据检验一下结果。如果把样例输入敲进去结果都不对，那程序肯定不行。&lt;/p&gt;

&lt;p&gt;光通过样例也是不行的。为了保证通过，你应该自行构造多个输入，观察输出是否正确。应从以下几个角度构造数据：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;守规矩的计算&lt;/li&gt;
  &lt;li&gt;不守规矩的计算：如果题目没做保证，那么应假设有非法数据。假如题目没说a一定大于0，那你有没有想到a可以等于0或-1？&lt;/li&gt;
  &lt;li&gt;多种情况：假如程序有多种结果（Yes/No），你是否都测试到了？&lt;/li&gt;
  &lt;li&gt;边界条件：假如最多100个人，那么你的程序在恰好输入100个人的情况下能否正常工作？
    &lt;ul&gt;
      &lt;li&gt;没有人或只有1个人呢？&lt;/li&gt;
      &lt;li&gt;稍微提一下，假如数组有100个元素（int a[100]），访问a[100]是非法的，但是在你自己电脑上不一定报错。这是一个隐藏的错误。为了避免这种错误，可以把数组开大一些，例如200甚至10000。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;除此之外，初学者常常忽略的问题有空格（一个空格、两个空格、多个空格、行末空格）、回车（例如最后一行的回车）、字母大小写和符号全半角，还有不明显的格式差别（例如题目要求用逗号分隔你却用了空格）。因为测试是全文逐字比较的，所以不要犯这种低级错误。&lt;/p&gt;

&lt;h2 id=&quot;section-8&quot;&gt;养成好习惯&lt;/h2&gt;

&lt;p&gt;建议大家照做，因为这样可以避免很多不必要的错误：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果你不知道全角符号&lt;code class=&quot;highlighter-rouge&quot;&gt;，。、（）&lt;/code&gt;和半角符号&lt;code class=&quot;highlighter-rouge&quot;&gt;,.\()&lt;/code&gt;有什么区别，那么建议你写代码的时候把输入法关掉，免得出现莫名其妙的错误。&lt;/li&gt;
  &lt;li&gt;不同功能（定义变量、输入、数据处理、输出）之间留点空行，也就是按功能分块，就像前面提到的那样。&lt;/li&gt;
  &lt;li&gt;接上条，如果代码太长，那么最好多用一些函数，把各功能分离出来。写代码的时候一个功能一个功能地写。没有人喜欢又长又臭的代码。&lt;/li&gt;
  &lt;li&gt;缩进，一定要保持代码的缩进。没有缩进的代码难以理解，而且很有可能丢花括号，从而造成不必要的麻烦。&lt;/li&gt;
  &lt;li&gt;使用“黑科技”（不解释就难以理解）的时候要加注释。&lt;/li&gt;
  &lt;li&gt;if、for等语句后面可以不加花括号对吧？别懒，把花括号加上，免得犯这样的错误：&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;section-9&quot;&gt;如何通过二级&lt;/h1&gt;

&lt;p&gt;这是也很多人关心的问题。虽然事实上计算机二级比英语六级容易通过（对于985、211的学生来说，只要英语三级也就是高考成绩不太烂，英语四级裸奔也能过……），但是很多人还是没通过。这不是他们不刻苦或者学得不好，而是因为他们不知道如何对付一个考证级别的考试。对，和英语四六级有着本质的区别。&lt;/p&gt;

&lt;p&gt;首先用一句话概括通过计算机三级和四级的武林秘籍：去购买高等教育出版社的、封面上带个大大的黄色字母K的官方教材，从头到尾把题刷一遍，该背的（包括试题）背下来，如果还没通过那你肯定是故意的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015-12-30-c/offical.png&quot; alt=&quot;二级官方教材&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一本官方教材胜过N本练习册。&lt;/p&gt;

&lt;h2 id=&quot;section-10&quot;&gt;基本内容&lt;/h2&gt;

&lt;p&gt;虽然二级过了三四级成绩才能算数，但是，之所以先介绍三四级，是因为三四级比二级好过——三四级基本上可以纯背，但二级还是要会点东西的。下面就介绍介绍二级C语言：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;选择题40分，大题（改错、填空、编程）60分。&lt;/li&gt;
  &lt;li&gt;上机考试，先做选择题，选择题全部做完才能做大题。做选择的时候电脑屏幕是锁死的，做大题的时候才能使用编程软件。&lt;/li&gt;
  &lt;li&gt;题目是从题库里随机抽的，所以不要尝试照旁边的人抄。当然，运气好的话，你会碰到和官方教材中差不多的题。撞大题的概率更高。&lt;/li&gt;
  &lt;li&gt;选择题中至少有20~30分来自“二级公共语言基础”，这个“公共语言基础”大致分成两类，一类是“算法与数据结构”，需要你去理解一些东西；另一类不管它是啥，反正是纯粹要背的东西。剩下的选择题和C语言本身有关。&lt;/li&gt;
  &lt;li&gt;C语言课的东西够用了，关键是你对考试出题的基本法的了解程度。&lt;/li&gt;
  &lt;li&gt;编程软件是钦点的Visual C++ 6.0，虽然它是盗版的，虽然它很可能无法在你自己的电脑上正常运行。&lt;/li&gt;
  &lt;li&gt;二级考完只有三种状态：没通过（&amp;lt;60分）、合格（60~89分）、优秀（90~100分）。因此，如果你不打算拿优秀证，考60和考89没有任何区别。（在这一点上，英语四六级就不一样——证书上面把成绩写出来了）&lt;/li&gt;
  &lt;li&gt;因为计算机二三四级证书都很水，因此，求职时如果应聘条件没有明确要求，不要指望拿这些证书给自己贴金。虽然二级可能是很多岗位的基本条件之一。&lt;/li&gt;
  &lt;li&gt;最后，如果你想考三四级，一定要看清楚对应科目对二级的要求——是要求通过编程语言类的二级还是数据库语言类的二级。如果你二级报的是Office那还是别考三四级了。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-11&quot;&gt;选择题&lt;/h2&gt;

&lt;p&gt;如果你觉得大题把握很大，而且没有拿优秀证的打算，那么“二级公共语言基础”的东西就可以少背一点了。反之要多背一些。&lt;/p&gt;

&lt;p&gt;“算法和数据结构”是一个不太容易懂的东西——如果学得很好，没准就可以去打ACM比赛了。既然是个只需要拿60分的考证，那么不妨把官方教材拿出来，看看他们喜欢怎样出题，把相关考点记住即可。&lt;/p&gt;

&lt;p&gt;有关C语言本身的选择题，实在不懂也不必太较真，因为它可能没有意义：例如经典的&lt;code class=&quot;highlighter-rouge&quot;&gt;a+=a-=a*a;&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;a=a++;&lt;/code&gt;都是未定义行为——连C语言标准对这些语句的结果都没有任何保证，所以肯定没有正确答案。&lt;/p&gt;

&lt;h2 id=&quot;section-12&quot;&gt;大题&lt;/h2&gt;

&lt;p&gt;大题是一定要会的。如果你没有精心准备，选择题分数可能会惨不忍睹，因此大题要尽量把分数都弄到手。&lt;/p&gt;

&lt;p&gt;为了把分数搞到手，我们要从两方面准备，一方面是正确解答题目，另一方面是正确地解答题目。&lt;/p&gt;

&lt;h3 id=&quot;section-13&quot;&gt;正确解答题目&lt;/h3&gt;

&lt;p&gt;大题分为改错、填空、编程。&lt;/p&gt;

&lt;p&gt;改错就很简单了。因为改错的模式都比较固定，只要多看看官方的题目就应该清楚他们会怎样考了。&lt;/p&gt;

&lt;p&gt;填空也一样。一般是让你填一些“单词”，或者是些简单的表达式。填空时候要多留意已经定义和未使用的变量。&lt;/p&gt;

&lt;p&gt;其实吧，改错和填空题很多时候就是&lt;strong&gt;推理&lt;/strong&gt;题——不用太清楚程序干嘛，只要保证所有变量都被用过了，该对应的地方都对应了，OK。&lt;/p&gt;

&lt;p&gt;编程题要注意：数组、指针和字符串对于初学者来说比较难理解，对吧？不幸的是，出题人也爱考这些东西。因此，还是要看官方教材，看看他们喜欢怎样出题，并且建议你在做这些题的时候亲自上机练习一下。&lt;/p&gt;

&lt;h3 id=&quot;section-14&quot;&gt;正确地解答题目&lt;/h3&gt;

&lt;p&gt;两个要点：一是不犯低级错误，二是要会用Visual C++ 6.0编辑代码。&lt;/p&gt;

&lt;p&gt;不犯低级错误，举个例子，题目提示&lt;code class=&quot;highlighter-rouge&quot;&gt;只修改/******* FOUND *******/下一行的代码&lt;/code&gt;，那么你不要改其他地方的代码，也不要把这个注释本身修改或删除。此外尽量不要碰原有代码的其他部分，例如空格和缩进。&lt;/p&gt;

&lt;p&gt;Visual C++ 6.0是一个古老的软件了（1998年发布），在现代操作系统（Windows 8/8.1/10）中会出现兼容性问题，甚至无法启动。因此，平时在自己电脑上练习的时候可以使用其他编程软件，然后考前去一趟机房（机房应该安装了Visual C++ 6.0），学会如何打开和保存代码（考试软件会帮你打开代码）、如何找到&lt;code class=&quot;highlighter-rouge&quot;&gt;int main()&lt;/code&gt;、如何编译运行。知道这些就足够了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015-12-30-c/vc6.png&quot; alt=&quot;VC6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;会点这三个按钮就够了。&lt;/p&gt;

&lt;h1 id=&quot;section-15&quot;&gt;拓展学习&lt;/h1&gt;

&lt;p&gt;对于非计算机专业的学生来说，尽管C语言很难学，尽管C语言&lt;span class=&quot;blackout&quot;&gt;看起来&lt;/span&gt;“不实用”，但是很多编程语言的套路都是类似的，因此学完C语言有助于其他“实用”语言的学习。有些“实用”语言甚至直接向C语言致敬，例如PHP。&lt;/p&gt;

&lt;p&gt;以下是一些当下很流行的、学起来可以“实用”的编程语言，如果有兴趣的话可以学一学。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HTML+CSS+JavaScript：做网页的一套语言，虽然是三个，但是实际上哪个都不需要学得太深——一方面需要什么东西可以自己去查，另一方面现成框架太多了，很多时候用不着从零开始。我个人建议不要用Dreamweaver，即使用也要用最新的Dreamweaver CC，否则容易落伍。&lt;/li&gt;
  &lt;li&gt;PHP：想做个实用网站吗？学吧！就是它大量致敬了C语言的语法！
    &lt;ul&gt;
      &lt;li&gt;由于PHP学习门槛很低，因此很容易写出有大量安全漏洞的网站。做项目时要多加小心。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Python：Python是个小巧而又强大的脚本语言。建议有兴趣的一定要学。
    &lt;ul&gt;
      &lt;li&gt;如果想写一个随写随用的程序，当然要找它；&lt;/li&gt;
      &lt;li&gt;如果想做一个实用的网站，同样可以找它——可以学习基于Python语言的Django框架；&lt;/li&gt;
      &lt;li&gt;如果想做一个带窗口对话框的程序，当然也可以找它——可以学习基于Python语言和Qt的PyQt框架。对于这种情况，建议同时学习PyQt和Qt C++。&lt;/li&gt;
      &lt;li&gt;Python有两套版本，一个是2.7.10，一个是3.5。它们两个有些差别，但是实际上不影响学习。遇到困难时到搜索引擎上搜一下就行了。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Visual C#：C++和C#都带个“C”，那它们当然是从C语言衍生过来的……学C语言写不出一个带窗口对话框的程序对吧&lt;span class=&quot;blackout&quot;&gt;其实C语言有GTK+&lt;/span&gt;，没关系，我们可以用一个好学的Visual C#，随手画个窗口出来！&lt;/li&gt;
  &lt;li&gt;Qt C++：同样是用来制作带窗口对话框程序的，只不过这个是C++语言。&lt;/li&gt;
  &lt;li&gt;Java：Android应用就是拿Java写的……&lt;/li&gt;
  &lt;li&gt;Objective-C：iOS应用是拿这个语言写的，只不过进App Store的门槛有点高。&lt;/li&gt;
  &lt;li&gt;MATLAB：数值计算、数值模拟必备。一定先把高等数学和线性代数学好然后再学这个……&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我不推荐Pascal和Basic，前者用的人数不多，后者……VB6也是1998年的东西，在现在的系统中已经不能正常运行了，而且学新版VB不如学C#。&lt;/p&gt;

&lt;p&gt;另外还有两个硬件：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Arduino：Arduino是一个卡片大小的开发板（如果不知道开发板是啥——就是可以让你拿来写程序的电路板），编程的时候基本上就是C或C++。与电路相关的东西都是封装好的，可以直接调用函数，所以不会被一些细枝末节困扰&lt;span&gt;当然对单片机和电路有一定了解之后那些细枝末节还是要学的&lt;/span&gt;。虽然玩51单片机的人更多，但是从Arduino入门会容易很多。&lt;/li&gt;
  &lt;li&gt;树莓派：树莓派是一个卡片大小的单板电脑。虽然设计者的定位是儿童电脑，不过实际上被极客当成高级玩具了。最新的树莓派2可以跑Linux和Windows 10（物联网版）系统，对物联网感兴趣的可以玩玩。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我个人的学习建议：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;尽量找外文书的中译本，原因很简单，翻译一本书需要付出大量时间精力，因此能够被拿来翻译的书基本上都是好书。&lt;span&gt;因为写书很容易，因此国内很容易出烂书。外国的月亮也不圆——外国也一样。&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;把书粗读一遍，大致了解一下基本语法。很多语言的基本结构都差不多，只不过单词不一样罢了。&lt;/li&gt;
  &lt;li&gt;细读，看看（特别是翻译本）作者的思想和思路。&lt;/li&gt;
  &lt;li&gt;照着教材做个小练习。&lt;/li&gt;
  &lt;li&gt;不用强求把所有东西都记住。现在局域网那么发达，有问题可以直接去网上查。&lt;/li&gt;
&lt;/ol&gt;</content><author><name>vjudge1</name></author><summary>这个问题曾经专门给人做过讲座。不过既然有人例如学妹没听过，那我还是把自己的经验感悟写出来吧。

说实话，现代人都比较功利——既然是非计算机专业的学生，那么C语言基本上是个用不着的东西。可是，它还是门必修课，那最起码不能挂科，对吧？

内容很长，最好找个时间慢慢读。</summary></entry><entry><title>编写图形界面程序</title><link href="https://vjudge1.github.io/2015/11/23/gui.html" rel="alternate" type="text/html" title="编写图形界面程序" /><published>2015-11-23T00:00:00+08:00</published><updated>2015-11-23T00:00:00+08:00</updated><id>https://vjudge1.github.io/2015/11/23/gui</id><content type="html" xml:base="https://vjudge1.github.io/2015/11/23/gui.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#qt&quot; id=&quot;markdown-toc-qt&quot;&gt;Qt&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#swing&quot; id=&quot;markdown-toc-swing&quot;&gt;Swing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#gtk&quot; id=&quot;markdown-toc-gtk&quot;&gt;Gtk&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#pyqtpyside&quot; id=&quot;markdown-toc-pyqtpyside&quot;&gt;PyQt/PySide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#lazarus&quot; id=&quot;markdown-toc-lazarus&quot;&gt;Lazarus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#web-&quot; id=&quot;markdown-toc-web-&quot;&gt;Web 技术&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;结论&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;买了个 Windows 10 平板电脑，发现不能刷 Linux（因为各种没驱动），然后就遇到了一个问题——如果想随手写一个实用的 GUI 程序，用哪个比较好呢？&lt;/p&gt;

&lt;p&gt;为了方便叙述，先把条件摆上：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;没有被现在的操作系统抛弃。&lt;/li&gt;
  &lt;li&gt;不要太占地方，因为平板一共才 60G。&lt;/li&gt;
  &lt;li&gt;能够快速开发——最起码得有个界面设计器。&lt;/li&gt;
  &lt;li&gt;最好能跨平台，因为我个人 Windows/Linux/Mac 经常换着用。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;条件 1 是针对 VB6 和易语言说的。这两个非常适合随手写随手用（快速应用开发，RAD），可惜它们都过时了。&lt;/p&gt;

&lt;p&gt;条件 2 是针对 Visual Studio 的。VS 非常好用，可惜占空间太大了。即使是 Community 或者 Express 也不能选择只安装单一语言，只能看着不需要的东西在那儿白白占地方。&lt;/p&gt;

&lt;p&gt;虽然很多事情通过一个脚本就能搞定，虽然现在是 Web 的时代，不过有些时候还是有个窗口对话框比较好用，因此我对常见的框架进行了一系列考察。&lt;/p&gt;

&lt;h1 id=&quot;qt&quot;&gt;Qt&lt;/h1&gt;

&lt;p&gt;Qt 是个跨平台的 C++ 框架。&lt;/p&gt;

&lt;p&gt;Qt Creator 集成了代码编辑器、界面设计器等功能，新建一个项目之后就可以拿界面设计器画窗口，而且控件（VB 的叫法）自动实例化，所以不用像 MFC 那样需要手动添加变量，再加上布局管理、信号和槽等机制，非常方便，可以做到随手画随手写然后就随手拿去用。&lt;/p&gt;

&lt;p&gt;不过 Qt 也非常占地方，大约需要 3GB——因为 Windows 没有 C++ 编译器，只能用 Qt 自带的 MinGW，或者把 Visual Studio 装上然后用它的编译器……&lt;/p&gt;

&lt;h1 id=&quot;swing&quot;&gt;Swing&lt;/h1&gt;

&lt;p&gt;Java 是跨平台的——是地球人就知道。所以说，用 Java 写的 GUI 程序也是。&lt;/p&gt;

&lt;p&gt;虽然 Java 的 IDE 非常多，但是并不是所有 IDE 都有界面设计器，所以感觉真的很蛋疼。而且写 Java 代码同样蛋疼。&lt;/p&gt;

&lt;h1 id=&quot;gtk&quot;&gt;Gtk&lt;/h1&gt;

&lt;p&gt;即使抛弃 VS，C# 也是不错的选择。只不过，肯定不是 Windows Forms 框架了（Windows Forms 没开源）。&lt;/p&gt;

&lt;p&gt;很多人都在找 Xamarin Studio 破解版，不过要是开发桌面应用的话，根本不用花钱（其实他们都写 Android 应用，那个可是价格不菲）。至于图形界面，就只好用跨平台的 Gtk# 了。&lt;/p&gt;

&lt;p&gt;Xamarin Studio 的代码编辑和图形界面比 VS 逊色很多，不过它的只有几百兆的体积可比 VS 好多了。因为 Gtk# 也是 .Net 平台（其实是 Mono），所以 .Net 本身的东西（例如&lt;code class=&quot;highlighter-rouge&quot;&gt;System&lt;/code&gt;）都是一样的，不过在 Gtk 那边我得摸着石头过河了，毕竟 Gtk# 不是那么主流。&lt;/p&gt;

&lt;p&gt;备注：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;虽然新建工程里面写着 VB 其实它根本不支持 VB。&lt;/li&gt;
  &lt;li&gt;IDE 本身有一些 bug，例如不能调语言……中英文混合的界面实在蛋疼。&lt;/li&gt;
  &lt;li&gt;如果不需要界面设计器，可以拿着 Xamarin Studio 写 ASP.NET 应用。等开源的那个 ASP.NET 出正式版我就打算试试。&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;pyqtpyside&quot;&gt;PyQt/PySide&lt;/h1&gt;

&lt;p&gt;PyQt = Python + Qt，既然 Python 和 Qt 都是跨平台的，那么 PyQt 当然也是跨平台的。&lt;/p&gt;

&lt;p&gt;PyQt 官网提供了附带 Qt 框架的 PyQt。不过反正都是闲着，而且已经装了 Qt，我就自己编译了——在 Windows 中编译，要事先把 PATH 环境变量设置好，然后做好找不到头文件的精神准备。只要准备充分，不比 Linux 中麻烦多少。&lt;/p&gt;

&lt;p&gt;PyQt 除了把编程语言换成了 Python 以外，其他东西都是一样的。&lt;/p&gt;

&lt;p&gt;不过，Qt 有一个集成的开发环境，PyQt 可没有——PyQt 提供了一个 Qt Designer，但是每次修改都需要自己运行代码生成器 PyUIC，这样就比较麻烦。比方说，如果建立了一个叫做 hello 的窗口（其中有一个按钮），运行了一遍 PyUIC，那么 helloworld 程序就需要这样写——&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PyQt5&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;QtWidgets&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PyQt5&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;QtCore&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;hello&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QtWidgets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QWidget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ui_Hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HelloWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setupUi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pushButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clicked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;say_hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;say_hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;QtWidgets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QMessageBox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;information&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello, world!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;QtWidgets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HelloWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exec_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;有人说 PyQt 和 Python 没多大关系，全都是 Qt。不过既然放着 C++ 不用，那肯定是冲着 Python 来的嘛——什么时候想给 Python 程序加个高大上的界面的时候就可以考虑一下了（其实还是想借 Python 的光）。&lt;/p&gt;

&lt;h1 id=&quot;lazarus&quot;&gt;Lazarus&lt;/h1&gt;

&lt;p&gt;若干年前，Delphi 是一个很火的编程软件，不知为何，后来逐渐淡出了人们的视线（不过 Delphi 一直在开发，从来未弃坑）。&lt;/p&gt;

&lt;p&gt;Delphi 是要钱的。在这个讲究开源的时代，谁乐意为了一个写 helloworld 级别的程序而掏钱啊。所以 Xojo 也是没必要在乎的。&lt;/p&gt;

&lt;p&gt;但是 Lazarus 就不一样了。它是社区搞的，自由软件，跨平台，而且一直在“山寨” Delphi。所以，直接找本 Delphi 的教材就可以进行学习了。&lt;/p&gt;

&lt;p&gt;Lazarus 和 Delphi 新建工程之后都是直接出现一个窗口，然后就可以直接用鼠标画控件，就像 VB 和易语言那样，非常迅速、方便。只不过 Pascal 的语法和其他语言很不一样（比如赋值符号&lt;code class=&quot;highlighter-rouge&quot;&gt;:=&lt;/code&gt;），所以可能除了那些打过信息学竞赛（不是 ACM）的人听过，其他人都没听过。&lt;/p&gt;

&lt;h1 id=&quot;web-&quot;&gt;Web 技术&lt;/h1&gt;

&lt;p&gt;Web 这么火，肯定有人想把 Web 那一套搬到桌面应用上。这样的例子很多，比如 Atom 和有抄袭嫌疑的 Visual Studio Code。&lt;/p&gt;

&lt;p&gt;这一类框架使用 Node.js、Chromium、HTML5/CSS3/JavaScript——因为 Node.js 跨平台，浏览器跨平台（而且还是钦点的），那么这种应用当然也跨平台了。&lt;/p&gt;

&lt;p&gt;因为我考察这些框架是为了随手写一个能用的程序（想想做网页的过程有多么痛苦），而且带着个大浏览器，编程和调试都很麻烦，所以当然不会拿这种框架来开发本地应用了。&lt;/p&gt;

&lt;p&gt;再次强调，不是因为这种技术不好，而是不够轻巧。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;结论&lt;/h1&gt;

&lt;p&gt;最后的结果是：留下 Qt、PyQt、Xamarin Studio 和 Lazarus。&lt;/p&gt;

&lt;p&gt;Lazarus 启动就能动手编，很随意。在 Windows 中还有 Windows API 用。&lt;/p&gt;

&lt;p&gt;拿 Qt 可以写点像样的东西。（备注：没说拿 Lazarus 不行）&lt;/p&gt;

&lt;p&gt;PyQt……有人说那是 Qt，其实是用来抱 Python 大腿的。&lt;/p&gt;

&lt;p&gt;Xamarin Studio 就留给将来学习 ASP.NET 用了。（如果 Visual Studio Code 不差的话可能还要换着用）&lt;/p&gt;</content><author><name>vjudge1</name></author><summary>买了个 Windows 10 平板电脑，发现不能刷 Linux（因为各种没驱动），然后就遇到了一个问题——如果想随手写一个实用的 GUI 程序，用哪个比较好呢？</summary></entry><entry><title>盗版软件的替代品</title><link href="https://vjudge1.github.io/2015/10/30/genuine.html" rel="alternate" type="text/html" title="盗版软件的替代品" /><published>2015-10-30T00:00:00+08:00</published><updated>2015-10-30T00:00:00+08:00</updated><id>https://vjudge1.github.io/2015/10/30/genuine</id><content type="html" xml:base="https://vjudge1.github.io/2015/10/30/genuine.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;操作系统&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#windows&quot; id=&quot;markdown-toc-windows&quot;&gt;Windows&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#linux&quot; id=&quot;markdown-toc-linux&quot;&gt;Linux&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#os-x&quot; id=&quot;markdown-toc-os-x&quot;&gt;OS X&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;常用软件&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#office-wordexcelpowerpoint&quot; id=&quot;markdown-toc-office-wordexcelpowerpoint&quot;&gt;Office (Word+Excel+PowerPoint)&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#office&quot; id=&quot;markdown-toc-office&quot;&gt;Office&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#latex&quot; id=&quot;markdown-toc-latex&quot;&gt;LaTeX&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#winrar&quot; id=&quot;markdown-toc-winrar&quot;&gt;WinRAR&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;安全软件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#adobe-&quot; id=&quot;markdown-toc-adobe-&quot;&gt;Adobe 系列&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;游戏&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;码农&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-5&quot; id=&quot;markdown-toc-section-5&quot;&gt;文本编辑器&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ide&quot; id=&quot;markdown-toc-ide&quot;&gt;IDE&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-6&quot; id=&quot;markdown-toc-section-6&quot;&gt;虚拟机&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-7&quot; id=&quot;markdown-toc-section-7&quot;&gt;专业软件&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#autocad3ds-max&quot; id=&quot;markdown-toc-autocad3ds-max&quot;&gt;AutoCAD、3ds Max&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-8&quot; id=&quot;markdown-toc-section-8&quot;&gt;数学&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-9&quot; id=&quot;markdown-toc-section-9&quot;&gt;其他&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我认识一个弯的土豪君，他的电脑和手机里只有正版软件。不过，作为穷人和经常换系统的人，所以……我们可以尽量把盗版都清除掉……&lt;/p&gt;

&lt;p&gt;虽然说天朝的网络封锁越来越严重，形势越来越严峻，但是目前还有一点好处，就是个人用盗版没人管。当然，这也是自由软件难以普及的重要原因。要是到了国外，电脑里装了一大堆盗版软件，没有人敢保证&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:cop:&quot; alt=&quot;:cop:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f46e.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:cop:&quot; alt=&quot;:cop:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f46e.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f46e.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;不会来找你……&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;操作系统&lt;/h1&gt;

&lt;h2 id=&quot;windows&quot;&gt;Windows&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;买笔记本电脑&lt;span class=&quot;blackout&quot;&gt;（没有被卖电脑的咸猪手重装过）&lt;/span&gt;时预装的系统是正版，只不过一般情况下都是些低级版本，比如 Windows 7 Home Basic 或者 Windows 8 中国版什么的。所以尽量别重装——如果不幸地刷了盗版，往下看。&lt;/li&gt;
  &lt;li&gt;如果是大学生，可以用 edu 邮箱注册 Dreamspark，里面有免费的 Windows 服务器系统（甚至连 Data Center 版都免费）。因为是服务器系统，所以装完之后需要稍微配置一下。&lt;/li&gt;
  &lt;li&gt;如果是大学生，学校也可能提供正版系统。其实正版和盗版仅仅是激活方法不同而已……&lt;/li&gt;
  &lt;li&gt;Windows 7/8 等系统通过&lt;code class=&quot;highlighter-rouge&quot;&gt;slmgr.vbs -rearm&lt;/code&gt;（前三次直接用，之后需要改注册表）可以免费用一年。对于有些人来说，肯定不到一年就重装系统了……&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;linux&quot;&gt;Linux&lt;/h2&gt;

&lt;p&gt;没钱买正版 Windows 吧？当然要用 Linux 了——又免费又自由！&lt;/p&gt;

&lt;p&gt;当然，因为天朝有天朝特色，所以总有被迫使用 Windows 的时候——软件版权的保护期是 50 年，你很可能不得不使用盗版，虽然用&lt;code class=&quot;highlighter-rouge&quot;&gt;slmgr.vbs -rearm&lt;/code&gt;可以规避一下。&lt;/p&gt;

&lt;h2 id=&quot;os-x&quot;&gt;OS X&lt;/h2&gt;

&lt;p&gt;土豪直接买苹果。苹果系统是电脑附带的，当然不要钱。&lt;/p&gt;

&lt;p&gt;需要说明的是，尽管系统不要钱，但是按照苹果的许可协议，装到普通电脑上（即黑苹果）也算盗版。&lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;常用软件&lt;/h1&gt;

&lt;h2 id=&quot;office-wordexcelpowerpoint&quot;&gt;Office (Word+Excel+PowerPoint)&lt;/h2&gt;

&lt;p&gt;Office 都是私有格式。但是由于盗版猖獗，已经成为了事实上的标准。&lt;/p&gt;

&lt;h3 id=&quot;office&quot;&gt;Office&lt;/h3&gt;

&lt;p&gt;如果是大学，学校可能会提供正版 Office。正版和盗版的区别同样是激活方法不同。&lt;/p&gt;

&lt;p&gt;以下是替代品：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;替代品&lt;/th&gt;
      &lt;th&gt;自由软件？&lt;/th&gt;
      &lt;th&gt;支持的操作系统&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;LibreOffice&lt;/td&gt;
      &lt;td&gt;是&lt;/td&gt;
      &lt;td&gt;Windows、Linux、Mac&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;WPS Office*&lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
      &lt;td&gt;Windows、Linux&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;永中 Office&lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
      &lt;td&gt;Windows、Linux&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Office Online（网站）&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;small&gt;* WPS Office 在 Windows 系统中会耍流氓。&lt;/small&gt;&lt;/p&gt;

&lt;h3 id=&quot;latex&quot;&gt;LaTeX&lt;/h3&gt;

&lt;p&gt;如果是写论文或制作幻灯片，也可以考虑 LaTeX。用 LaTeX 写出的论文非常漂亮，只不过它像一门编程语言，需要稍微学一些语法才能用。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;编译器：
    &lt;ul&gt;
      &lt;li&gt;Windows：&lt;a href=&quot;http://www.ctex.org&quot;&gt;CTEX&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Linux：很可能一个 apt-get 或 yum 就搞定了。&lt;/li&gt;
      &lt;li&gt;Mac：&lt;a href=&quot;http://www.tug.org/mactex/&quot;&gt;MacTex&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;编辑器：CTEX 自带的 WinEdt 需要花钱购买。所以我推荐自由而且好用的 TexStudio，并且它是跨平台的。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;winrar&quot;&gt;WinRAR&lt;/h2&gt;

&lt;p&gt;RAR 是一种私有格式，所以最好不要用——除了 WinRAR，貌似没几个能打包成 RAR 的软件。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;国产压缩软件一大堆，只不过都不自由，有可能刷流氓，而且一般只支持 Windows。&lt;/li&gt;
  &lt;li&gt;很多人推荐 7-zip，这是一个跨平台的自由软件。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;实际上我在 Linux 系统中直接用自带的压缩包管理器——把各种格式的支持都 apt-get 装好就行了。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;安全软件&lt;/h2&gt;

&lt;p&gt;只有 Windows 需要卫士和杀毒软件吧——在 360 的带动下，很多安全软件都免费的了，所以……用 360 国际版就行了，不耍流氓。&lt;/p&gt;

&lt;h2 id=&quot;adobe-&quot;&gt;Adobe 系列&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Photoshop：当然是自由的 GIMP，虽然它没有 Photoshop 好用。&lt;/li&gt;
  &lt;li&gt;Illustrator：Inkscape，虽然它的版本号是以 0 开头的。&lt;/li&gt;
  &lt;li&gt;Flash：Flash 是私有格式所以没有替代品，而且 Flash 在 HTML5 时代已经落后了……&lt;/li&gt;
  &lt;li&gt;Dreamweaver：可以用 Adobe 自家的 Brackets，免费还好用。光会用可视化编辑是不行的。&lt;/li&gt;
  &lt;li&gt;Premiere、After Effects：如果你真是专业人士，那么还是花钱吧。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;需要注意的是，学生可以购买教育版本，这样一个软件可以只花几百块钱就搞定。几百太贵？给你打一折你还不知足？！&lt;/p&gt;

&lt;p&gt;说句实话，其实很多女生用毁图秀秀就够了……&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:smirk:&quot; alt=&quot;:smirk:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f60f.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:smirk:&quot; alt=&quot;:smirk:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f60f.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f60f.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;&lt;/p&gt;

&lt;h1 id=&quot;section-3&quot;&gt;游戏&lt;/h1&gt;

&lt;p&gt;很多正版游戏都可以从 Steam 上买。Steam 经常有优惠活动，而且在感恩节、圣诞节等重要节日期间会大幅度打折，所以平时多关注一下，趁打折的时候赶快入手就行了。&lt;/p&gt;

&lt;h1 id=&quot;section-4&quot;&gt;码农&lt;/h1&gt;

&lt;h2 id=&quot;section-5&quot;&gt;文本编辑器&lt;/h2&gt;

&lt;p&gt;Sublime Text、UltraEdit 等软件都要钱，所以当然要换——&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;编辑器&lt;/th&gt;
      &lt;th&gt;自由软件？&lt;/th&gt;
      &lt;th&gt;支持的系统&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Vim*&lt;/td&gt;
      &lt;td&gt;是&lt;/td&gt;
      &lt;td&gt;Windows、Linux、Mac&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Emacs*&lt;/td&gt;
      &lt;td&gt;是&lt;/td&gt;
      &lt;td&gt;Windows、Linux、Mac&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Atom&lt;/td&gt;
      &lt;td&gt;是&lt;/td&gt;
      &lt;td&gt;Windows、Linux、Mac&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Notepad++&lt;/td&gt;
      &lt;td&gt;是&lt;/td&gt;
      &lt;td&gt;Windows&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Visual Studio Code**&lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
      &lt;td&gt;Windows、Linux、Mac&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;small&gt;* 虽然 Vim 和 Emacs 分别被称作“编辑器之神”和“神的编辑器”，但是毕竟几十年了，现代人可能不太适应。所以可以用其他编辑器，然后装支持 Vim/Emacs 编辑风格的插件，例如 VsVim。&lt;/small&gt;
&lt;small&gt;** Visual Studio Code 还没出正式版。之所以介绍，是因为 Code 的发布不像（过去的）微软的作风。&lt;/small&gt;&lt;/p&gt;

&lt;h2 id=&quot;ide&quot;&gt;IDE&lt;/h2&gt;

&lt;p&gt;开发团队当然会用正版了。如果是个人开发或个人练习，当然要尽量避免花钱才能用的语言和框架，例如，避免用 Xamarin 开发移动应用程序。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Visual Studio：按照软件协议，如果开发商业软件，必须要花钱购买商业版本。如果个人练习，可以使用免费的社区版（Community）。&lt;/li&gt;
  &lt;li&gt;Qt：和 Visual Studio 一样，开发商业软件需要购买授权，开发自由软件可以用免费的社区版。&lt;/li&gt;
  &lt;li&gt;PyCharm：PyCharm 有社区版和教育版，虽然功能少了很多，但毕竟不要钱。&lt;/li&gt;
  &lt;li&gt;IntelliJ IDEA：也有社区版，虽然功能少。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;由于不同人对 IDE 的依赖程度不同——编程高手可以只用一个配置好的现代化文本编辑器，所以不再详细举例。&lt;/p&gt;

&lt;h2 id=&quot;section-6&quot;&gt;虚拟机&lt;/h2&gt;

&lt;p&gt;VMware（Workstation 和 Fusion）、Parallels Desktop 都要钱，所以当然用自由的 VirtualBox。&lt;/p&gt;

&lt;p&gt;VMware Player 也可以凑合着用，但是没有 VirtualBox 功能多。&lt;/p&gt;

&lt;h1 id=&quot;section-7&quot;&gt;专业软件&lt;/h1&gt;

&lt;h2 id=&quot;autocad3ds-max&quot;&gt;AutoCAD、3ds Max&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.autodesk.com/education/free-software/all&quot;&gt;学生可以免费用三年&lt;/a&gt;。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3ds Max：Blender。值得一提的是，有商业公司也在用 Blender。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-8&quot;&gt;数学&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Mathematica：Mathics&lt;/li&gt;
  &lt;li&gt;MATLAB：Octave 和 Scilab。Octave 有两点值得注意，一是 Octave 没有图形界面，需要安装 QtOctave，二是 Octave 语法和 MATLAB 几乎相同。&lt;/li&gt;
  &lt;li&gt;Origin：qtiplot&lt;/li&gt;
  &lt;li&gt;绘图也可以使用 GNUplot。&lt;/li&gt;
  &lt;li&gt;统计用 R 语言，对应的开发环境有 RStudio。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-9&quot;&gt;其他&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://alternativeto.net&quot;&gt;alternativeTo&lt;/a&gt; 是一个专门收集商业软件替代品的网站。因为里面有 ajax.googleapis.com，所以可能半天刷不出页面（你懂得）。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Synergy：Synergy 是在多个电脑间共享键盘和鼠标的软件。它是一个收费的自由软件，所以你完全可以把源代码拉过来然后自己破解……&lt;/li&gt;
&lt;/ul&gt;</content><author><name>vjudge1</name></author><summary>我认识一个弯的土豪君，他的电脑和手机里只有正版软件。不过，作为穷人和经常换系统的人，所以……我们可以尽量把盗版都清除掉……</summary></entry><entry><title>［科普］网络故障</title><link href="https://vjudge1.github.io/2015/09/26/g-f-w.html" rel="alternate" type="text/html" title="［科普］网络故障" /><published>2015-09-26T00:00:00+08:00</published><updated>2015-09-26T00:00:00+08:00</updated><id>https://vjudge1.github.io/2015/09/26/g-f-w</id><content type="html" xml:base="https://vjudge1.github.io/2015/09/26/g-f-w.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;备注&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;网络故障的原因&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;如果一切正常&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#dns-poisoning&quot; id=&quot;markdown-toc-dns-poisoning&quot;&gt;第一种故障 (DNS poisoning)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ip-block&quot; id=&quot;markdown-toc-ip-block&quot;&gt;第二种故障 (IP block)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#keyword-filter&quot; id=&quot;markdown-toc-keyword-filter&quot;&gt;第三种故障 (Keyword filter)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;其他影响&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;解决故障的思路&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#https&quot; id=&quot;markdown-toc-https&quot;&gt;HTTPS&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ipv6&quot; id=&quot;markdown-toc-ipv6&quot;&gt;IPv6&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-5&quot; id=&quot;markdown-toc-section-5&quot;&gt;鸡毛信&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-6&quot; id=&quot;markdown-toc-section-6&quot;&gt;规避风险&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#protocol-detecting&quot; id=&quot;markdown-toc-protocol-detecting&quot;&gt;Protocol detecting&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-7&quot; id=&quot;markdown-toc-section-7&quot;&gt;探测&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-8&quot; id=&quot;markdown-toc-section-8&quot;&gt;办假证&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-9&quot; id=&quot;markdown-toc-section-9&quot;&gt;不为人知的事情&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-10&quot; id=&quot;markdown-toc-section-10&quot;&gt;其他&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;为什么有些网站，例如百度、新浪微博和人人网&lt;span class=&quot;blackout&quot;&gt;所抄袭的对象&lt;/span&gt;，它们明明就在那里，但是就是进不去？&lt;/p&gt;

&lt;p&gt;难道是网络故障吗？原因大家&lt;s&gt;肯定都懂得&lt;/s&gt;其实不一定懂，因此本文将科普一些更详细的知识。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;备注&lt;/h1&gt;

&lt;p&gt;为了方便叙述，后文将把那个你懂得的东西叫做&lt;s&gt;墙&lt;/s&gt;出口检测设备。&lt;/p&gt;

&lt;p&gt;国内的网络连接不经过这个设备，只有出国或者回国的时候才会经过这个设备。在国内根本不需要类似的设备&lt;span class=&quot;blackout&quot;&gt;只需要一些叔叔就能彻底解决问题了&lt;/span&gt;。&lt;/p&gt;

&lt;p&gt;“出口检测设备”大约于 1998 年成立，作者是大名鼎鼎的方&lt;span class=&quot;blackout&quot;&gt;滨兴&lt;/span&gt;校长。&lt;/p&gt;

&lt;p&gt;那么设备由谁主管呢？这个没有人知道，但是他不告诉我们到底是谁。我猜这个人应该姓阎&lt;span class=&quot;blackout&quot;&gt;，因为我们曾经派了一些人去打听相关的事儿，但是他们都从来没有回来过&lt;/span&gt;。&lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;网络故障的原因&lt;/h1&gt;

&lt;p&gt;回到正题，为什么有些网站进不去？原因有很多种，本文将一一介绍。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;如果一切正常&lt;/h2&gt;

&lt;p&gt;当我们要去一个地方的时候，例如北京邮电大学&lt;small&gt;（相当于“域名”）&lt;/small&gt;，我们当然需要知道地址，或者知道“怎么走”&lt;small&gt;（也就是“路由”）&lt;/small&gt;才能过去。&lt;/p&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;北京邮电大学&lt;/h4&gt;

&lt;p&gt;北京邮电大学那么小，小到不比你的高中校园大多少的程度，为什么还要拿它举例子呢？因为它是革命圣地——出口检测设备的诞生地！&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;当我们第一次去北京的时候，我们当然需要问路&lt;small&gt;（“DNS 查询”）&lt;/small&gt;。问路的目标有很多——你可以问&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:cop:&quot; alt=&quot;:cop:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f46e.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:cop:&quot; alt=&quot;:cop:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f46e.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f46e.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;叔叔，也可以问路边开小卖店的，当然也可以直接给北京邮电大学打电话。这些不同的人，就相当于不同的 DNS 服务器。&lt;small&gt;（因此有的时候能登上 QQ 但是打不开网页，就是因为你想找叔叔问路但是周围没有叔叔，所以你当然要换个人来问——换 DNS 服务器。）&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;如果&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:cop:&quot; alt=&quot;:cop:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f46e.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:cop:&quot; alt=&quot;:cop:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f46e.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f46e.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;叔叔或者什么人知道北京邮电大学在哪儿，他就会回答你，并且告诉你北京邮电大学在“北京市海淀区西土城路 10 号”&lt;small&gt;（正确的 IP 地址）&lt;/small&gt;。&lt;/p&gt;

&lt;p&gt;当然找的时候就是“从北京站乘坐地铁 2 号线，到达车公庄站，从地铁东南口出，步行约160米，到达车公庄北站，乘坐 632 到达明光桥北站，向北步行即可到达北京邮电大学西门”&lt;small&gt;（路由）&lt;/small&gt;。因为地址是正确的，所以只要按照这条路线走，就肯定能找到北京邮电大学。&lt;/p&gt;

&lt;h2 id=&quot;dns-poisoning&quot;&gt;第一种故障 (DNS poisoning)&lt;/h2&gt;

&lt;p&gt;事实上，有些北京人比较排外&lt;span class=&quot;blackout&quot;&gt;或者他们是已经知道你的底细的北京朝阳群众&lt;/span&gt;，尤其排斥东北人，觉得你不应该去北京邮电大学&lt;span class=&quot;blackout&quot;&gt;打出口检测设备的主意&lt;/span&gt;，所以，当你问路的时候会告诉你一个错误的地方，例如“北京市顺化区长青路45号”&lt;small&gt;（很明显是一个根本不存在的 IP 地址）&lt;/small&gt;。近些年来，他们也会告诉你一个貌似正确，实际上并不正确的地方，如“北京市昌平区府学路27号”&lt;small&gt;（中国政法大学——错误但确实存在的 IP 地址）&lt;/small&gt;。&lt;/p&gt;

&lt;p&gt;很多网站上不去，原因就是这么&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:hankey:&quot; alt=&quot;:hankey:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f4a9.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:hankey:&quot; alt=&quot;:hankey:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f4a9.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f4a9.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;简单。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015-09-26-gfw2/dnspoisoning.jpg&quot; alt=&quot;dns&quot; /&gt;
&lt;br /&gt;&lt;small&gt;别有用心的路牌——就是这个意思&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;那么，直接给北邮打电话&lt;small&gt;（把 DNS 服务器设置成国外的）&lt;/small&gt;不就可以知道准确的地址了吗？但是很遗憾，出口检测设备的技术已经高到可以直接换地址的程度了——北邮的工作人员告诉你是“海淀区”，但是你接电话的时候听到的仍然是“昌平区”。&lt;/p&gt;

&lt;p&gt;因此有些网站需要自己找到正确的地址才能访问。&lt;/p&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;判断方法&lt;/h4&gt;

&lt;p&gt;可以使用 nslookup 命令查询和判断是否有人误导你，给你指出了错误的路，例如&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nslookup www.baidu.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果想测试其他 DNS 服务器，使用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nslookup www.baidu.com 114.114.114.114
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;将得到的 IP 结果到百度上查一查，看看到底是否靠谱。一般情况下，只要那个网站上不去，基本上 IP 都是不靠谱的。&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;怎样才能找到呢？&lt;/h4&gt;

&lt;p&gt;在线 nslookup 网站（online nslookup）那么多，为什么不找一个靠谱的查一查呢？&lt;/p&gt;

&lt;p&gt;查完记得 Ping 一下，因为……&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;ip-block&quot;&gt;第二种故障 (IP block)&lt;/h2&gt;

&lt;p&gt;毕竟问路效果有限&lt;small&gt;（如果自己知道地址就可以自己去找了）&lt;/small&gt;，所以为了取得更好的效果，可以直接把路拆了。这种事儿铁道游击队做得太多了。&lt;/p&gt;

&lt;p&gt;所以，只要把通向北邮的道路全部拆掉&lt;small&gt;（IP block）&lt;/small&gt;，即使你知道北邮在哪儿你照样过不去。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015-09-26-gfw2/ipblock.jpg&quot; alt=&quot;ip&quot; /&gt;
&lt;br /&gt;&lt;small&gt;百度就在路的那面，有本事过去啊&lt;/small&gt;&lt;/p&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;判断方法&lt;/h4&gt;

&lt;p&gt;很简单，ping 一下就知道有没有路了。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ping 192.168.1.1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果想知道详情，可使用 traceroute（tracert）命令。&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;有的时候，路并没有完全拆毁，只是不太好走而已。&lt;/p&gt;

&lt;h2 id=&quot;keyword-filter&quot;&gt;第三种故障 (Keyword filter)&lt;/h2&gt;

&lt;p&gt;还记得多少年前用百度&lt;span class=&quot;blackout&quot;&gt;所抄袭的那个网站&lt;/span&gt;搜索一点东西，搜着搜着就“连接已&lt;s&gt;重置&lt;/s&gt;充值”了吧？&lt;/p&gt;

&lt;p&gt;普通的网页传输采用 HTTP 协议。这就好比上街的时候不拿兜子或背包，直接拿着东西走——你拿了什么，路人&lt;span class=&quot;blackout&quot;&gt;和朝阳群众&lt;/span&gt;一目了然。&lt;/p&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;明文传输&lt;/h4&gt;

&lt;p&gt;在网页里输入密码，密码看不见，对吧？提交表单，提交内容看不见，对吧？在此必须要提醒你，其实挡上了也是明文——防君子不防小人而已。&lt;/p&gt;

&lt;p&gt;当然，HTTP 也没危险到任何人都能截获，要不然人们就不会用这个协议了。但是，如果一个别有用心的人在你的网络访问的路上设了关卡，例如钓鱼热点，那么你的安全将不复存在，因为明文传输意味着他可以看得清清楚楚。就像下图一样：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015-09-26-gfw2/http.png&quot; alt=&quot;http&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;2002 年诞生了一项新技术&lt;span class=&quot;blackout&quot;&gt;北京朝阳群众技术&lt;/span&gt;：&lt;/p&gt;

&lt;p&gt;如果你拿的是正常的东西，那么在大街上走路的时候当然不会有问题。但是，如果你拿了一些不该拿的东西，例如&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:bomb:&quot; alt=&quot;:bomb:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f4a3.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:bomb:&quot; alt=&quot;:bomb:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f4a3.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f4a3.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;或者一本封面上阿姨没穿衣服的书&lt;small&gt;（传输过程中出现关键词）&lt;/small&gt;，那么有人&lt;span class=&quot;blackout&quot;&gt;朝阳群众&lt;/span&gt;自然有事情做了——请&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:cop:&quot; alt=&quot;:cop:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f46e.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:cop:&quot; alt=&quot;:cop:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f46e.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f46e.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;叔叔来找你&lt;small&gt;（触发关键词，连接中断）&lt;/small&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015-09-26-gfw2/telescreen.jpg&quot; alt=&quot;telescreen&quot; /&gt;
&lt;br /&gt;&lt;small&gt;一点遮挡都没有，老大哥当然可以看得清清楚楚&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;需要注意的是，即使你找到了正确的路，但是你穿着印有星星月亮&lt;span class=&quot;blackout&quot;&gt;恐怖组织标志&lt;/span&gt;和一些虫子&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:bug:&quot; alt=&quot;:bug:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f41b.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:bug:&quot; alt=&quot;:bug:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f41b.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f41b.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;&lt;span class=&quot;blackout&quot;&gt;阿拉伯文&lt;/span&gt;的衣服到处乱转，&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:cop:&quot; alt=&quot;:cop:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f46e.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:cop:&quot; alt=&quot;:cop:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f46e.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f46e.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;叔叔当然会找你&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:new_moon_with_face:&quot; alt=&quot;:new_moon_with_face:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f31a.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:new_moon_with_face:&quot; alt=&quot;:new_moon_with_face:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f31a.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f31a.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;。&lt;small&gt;（即 IP 正确，但是因为 HTTP 协议中的“Host: ?????.com”是明文，所以同样触发了关键词。）&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015-09-26-gfw2/terrorist.jpg&quot; alt=&quot;terrorist&quot; /&gt;
&lt;br /&gt;&lt;small&gt;暴露了自己的恐怖分子的身份，那么随便几个群众都能把你制服&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;好在目前 HTTPS 协议不受此影响&lt;small&gt;（上街的时候把东西放背包里，谁知道你拿了什么？）&lt;/small&gt;因此对于采用 HTTPS 的网站，出口检测设备需要采取其他手段。&lt;/p&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;安全建议&lt;/h4&gt;

&lt;p&gt;尽量不要连接公共 Wifi。如果必须要用，建议用 VPN（仅仅是为了加密连接，不要想太多）。因为即使你可以保证只用 HTTPS，但是你要访问的网站和你所用的软件不能。&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-3&quot;&gt;其他影响&lt;/h2&gt;

&lt;p&gt;凡是出国途中遇到问题，都是上面提到的原因——&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;有些时候苹果 App Store 或者 Windows 应用商店会经常出现故障。&lt;/li&gt;
  &lt;li&gt;很多外国网页加载速度奇慢无比，因为负责网页样式的代码都被放到那些“看起来不存在”的地方里面了。所以，在网页卡着的时候，浏览器事实上已经知道该输出什么文字，只不过不知道应该以什么颜色、样式输出&lt;span class=&quot;blackout&quot;&gt;浏览器哪儿知道什么出口检测设备&lt;/span&gt;，所以当然是一片空白（或者是一堆没有样式的文字）。&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;section-4&quot;&gt;解决故障的思路&lt;/h1&gt;

&lt;p&gt;其实大家最关心的是，怎样才能解决网络故障。下面是一点点提示：&lt;/p&gt;

&lt;h2 id=&quot;https&quot;&gt;HTTPS&lt;/h2&gt;

&lt;p&gt;感谢爱德华·斯诺登，他让我们在解决某些问题方面变得更加轻松——2014 年，国外很多主要网站已经全面采用 HTTPS。国内有一部分网站也采用了 HTTPS。&lt;/p&gt;

&lt;p&gt;国内为什么不普及呢？估计有两个原因：一是证书太贵了，二是太麻烦而且还没有用&lt;span class=&quot;blackout&quot;&gt;反正一切都是国家的&lt;/span&gt;。&lt;/p&gt;

&lt;p&gt;HTTPS 有什么好处呢？接着前面的例子讲——&lt;/p&gt;

&lt;p&gt;我们说，采用 HTTP 传输就好比上大街直接拿着东西走，所以拿着什么别人看得清清楚楚。&lt;/p&gt;

&lt;p&gt;HTTPS 就相当于上街时背个包，把东西放包里面（加密）。怎么装的只有双方知道，所以路人&lt;span class=&quot;blackout&quot;&gt;包括朝阳群众&lt;/span&gt;当然不知道你带了什么东西，也管不了你。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015-09-26-gfw2/87f159bf-d869-4345-9f31-0553e80b65f2.jpg&quot; alt=&quot;a&quot; /&gt;
&lt;br /&gt;&lt;small&gt;我什么都不知道&lt;span class=&quot;blackout&quot;&gt;。谁知道包里面是不是炸弹呢&lt;/span&gt;——这就是 HTTPS&lt;a href=&quot;http://epaper.cqcb.com/html/2014-07/04/content_121984.htm&quot;&gt;（图片来源）&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;自从 HTTPS 大规模普及，事实上已经成为了一个解决网络故障的原理。&lt;/p&gt;

&lt;h2 id=&quot;ipv6&quot;&gt;IPv6&lt;/h2&gt;

&lt;p&gt;由于 IPv6 是一个全新的协议，所以出口检测设备拿它也没办法。没准 IPv6 就是这个原因才没有被大规模推广。&lt;/p&gt;

&lt;p&gt;但是，注意，这不代表使用 IPv6 就可以万事大吉了——因为访问 IPv6 网站也要像前文提到的那样去“问路”，所以得到的结果照样有可能是错的。&lt;/p&gt;

&lt;p&gt;你仍然需要知道网站的正确地址才能访问。这样的话，如果 IPv4 地址是可以使用的，IPv4 和 IPv6 就没有太大区别了。不过 IPv6 速度更快而且不受干扰。&lt;/p&gt;

&lt;div class=&quot;callout callout-warning&quot;&gt;
&lt;h4 id=&quot;ipv6-&quot;&gt;IPv6 隧道&lt;/h4&gt;

&lt;p&gt;IPv6 没问题对吧？但是隧道可不是——隧道是不加密的，该断当然就断了。所以不要拿隧道当梯子使！&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;4+6=2&lt;/h4&gt;

&lt;p&gt;知道那个可以用来屏蔽广告&lt;span class=&quot;blackout&quot;&gt;其实是用来出国&lt;/span&gt;的 Hosts 吧？其实，你可以同时给一个域名指定多个 IP——既有 IPv4 又有 IPv6！&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-5&quot;&gt;鸡毛信&lt;/h2&gt;

&lt;p&gt;这是一个重点。&lt;/p&gt;

&lt;p&gt;知道鸡毛信的故事吧？在抗战时期，我们当然会用一些暗语来与自己人交流，尤其是地下工作者，要不然……采用类似的方法，即使见到鬼子面了，情报也不会被鬼子&lt;span class=&quot;blackout&quot;&gt;直接&lt;/span&gt;截获。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015-09-26-gfw2/encrypt.jpg&quot; alt=&quot;a&quot; /&gt;
&lt;br /&gt;&lt;small&gt;太君只能看到一群羊——谁知道羊身上还藏着情报&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;VPN、G&lt;span class=&quot;blackout&quot;&gt;oAgen&lt;/span&gt;t、S&lt;span class=&quot;blackout&quot;&gt;hadowsSoc&lt;/span&gt;ks&lt;span class=&quot;blackout&quot;&gt;、目油们&lt;/span&gt;等都是这样的东西&lt;span class=&quot;blackout&quot;&gt;，只不过 VPN 只要能和有关部门合作就合法，而其他的都不合法&lt;/span&gt;。&lt;/p&gt;

&lt;p&gt;我们建议，如果你真的是为了学术用途，建议你花钱买个合法的 VPN&lt;span class=&quot;blackout&quot;&gt;，因为合法的 VPN 不会被++但是会记录你的浏览记录&lt;/span&gt;。又稳定又方便。&lt;/p&gt;

&lt;h1 id=&quot;section-6&quot;&gt;规避风险&lt;/h1&gt;

&lt;p&gt;知道如何解决网络故障，但是也需要知道怎样规避风险。&lt;/p&gt;

&lt;h2 id=&quot;protocol-detecting&quot;&gt;Protocol detecting&lt;/h2&gt;

&lt;p&gt;智能家居从墙开始——&lt;/p&gt;

&lt;p&gt;有了机器学习技术作为支撑，出口检测设备已经能够识别各种 VPN、Gt、Sks 等流量。至于会不会++那些流量，全凭设备的心情&lt;span class=&quot;blackout&quot;&gt;，可能是有一个阈值，只要流量足够大就切断&lt;/span&gt;。&lt;/p&gt;

&lt;p&gt;&lt;small&gt;鸡毛信送多了，鬼子当然知道羊是用来送信的了，只不过，想不想“三光”全凭心情。&lt;/small&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-7&quot;&gt;探测&lt;/h2&gt;

&lt;p&gt;你以为墙只是一种用来支撑房子的东西吗？那是因为你没看过正大综艺《墙来了》！&lt;/p&gt;

&lt;p&gt;《墙来了》里的墙就可以主动地找你。可能出口检测设备就是受了 &lt;s&gt;CCAV&lt;/s&gt;CCTV 的启发，也开发了主动找你的功能。&lt;/p&gt;

&lt;p&gt;有关事项 Tor 项目已经做了深入研究，我们就不研究了。&lt;/p&gt;

&lt;h2 id=&quot;section-8&quot;&gt;办假证&lt;/h2&gt;

&lt;p&gt;见过路边“办证”的小广告吧？&lt;/p&gt;

&lt;p&gt;别以为小广告都是骗人的——出口检测设备也找过这些办证的&lt;span class=&quot;blackout&quot;&gt;，要不然为什么总有人想着要删除 CNNIC CA 呢&lt;/span&gt;。&lt;/p&gt;

&lt;p&gt;因此，在访问网站时，如果浏览器提示“证书无效”，那么你一定要停下来，不要再继续，因为假证可以用来监听和干预！&lt;/p&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;12306 除外&lt;/h4&gt;

&lt;p&gt;12306 的证书是自己给自己颁发的，所以当然是假证了。自己制作证书，省钱啊&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:wink:&quot; alt=&quot;:wink:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f609.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:wink:&quot; alt=&quot;:wink:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f609.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f609.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;！&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015-09-26-gfw2/fakecert1.png&quot; alt=&quot;a&quot; /&gt;
&lt;br /&gt;&lt;small&gt;千万不要继续，更不要信任假证书！&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015-09-26-gfw2/fakecert2.png&quot; alt=&quot;a&quot; /&gt;
&lt;br /&gt;&lt;small&gt;因为一旦继续，老大哥就可以知道你在看什么了（没有证书就看不到）&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015-09-26-gfw2/fakecert3.png&quot; alt=&quot;a&quot; /&gt;
&lt;br /&gt;&lt;small&gt;甚至对你恶搞一下&lt;/small&gt;&lt;/p&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;cnnic&quot;&gt;关于 CNNIC&lt;/h4&gt;

&lt;p&gt;因为 CNNIC 黑历史比较多&lt;span class=&quot;blackout&quot;&gt;，没准 CNNIC 和某些设备是一伙儿的&lt;/span&gt;，所以大家都不太相信他们。2015 年 3 月，CNNIC 的一个在埃及的中间证书颁发机构伪造了 G&lt;span class=&quot;blackout&quot;&gt;mail&lt;/span&gt; 的证书，结果很快 Chrome、Firefox、Apple 等就不再信任 CNNIC CA 了。&lt;/p&gt;
&lt;/div&gt;

&lt;h1 id=&quot;section-9&quot;&gt;不为人知的事情&lt;/h1&gt;

&lt;p&gt;很多人以为出口检测设备只是一个检测设备，其实它还是一个非常先进的武器，俗称“大炮”。&lt;/p&gt;

&lt;p&gt;因为中国除了人多就是人多，所以，只要随便找个大流量网站（比如 &lt;s&gt;12306&lt;/s&gt;百度统计），稍微加点攻击的代码，那么——绝对是难以招架的 DDoS&amp;lt;img class=’emoji’ title=’&lt;img class=&quot;emoji&quot; title=&quot;:scream:&quot; alt=&quot;:scream:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f631.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ alt=’&lt;img class=&quot;emoji&quot; title=&quot;:scream:&quot; alt=&quot;:scream:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f631.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;’ src=’https://assets.github.com/images/icons/emoji/unicode/1f631.png’ height=’20’ width=’20’ align=’absmiddle’ /&amp;gt;！&lt;/p&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;所以说……&lt;/h4&gt;

&lt;p&gt;以后想摧毁哪个反&lt;span class=&quot;blackout&quot;&gt;共&lt;/span&gt;华组织的网站，只要在春节之前往 12306 网站里加入攻击代码……春节快乐！&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;由于潜力巨大，2015 年 3 月末，设备首次对 GitHub 小试牛刀。这次试验取得了&lt;span class=&quot;blackout&quot;&gt;白白激怒了全世界软件开发人员，没有任何&lt;/span&gt;实际效果。&lt;/p&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;补充说明&lt;/h4&gt;

&lt;p&gt;由于对百度代码的修改作用发生在出口检测设备上面，因此国内访问百度并不会产生类似的攻击效果。在 GitHub 遭攻击之后不久，百度所有产品差不多都采用了 HTTPS&lt;span class=&quot;blackout&quot;&gt;，这样百度就不会再次被当作武器来使用了&lt;/span&gt;。&lt;/p&gt;
&lt;/div&gt;

&lt;h1 id=&quot;section-10&quot;&gt;其他&lt;/h1&gt;

&lt;p&gt;以下方法从技术上讲都是可以实现的&lt;span class=&quot;blackout&quot;&gt;，有些是出口检测设备曾经用过的&lt;/span&gt;，只不过现在设备没大规模使用而已。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;不是彻底把路弄断，而是隔几分钟就开一下，给人一种不稳定的感觉。&lt;/li&gt;
  &lt;li&gt;禁止发邮件。&lt;/li&gt;
  &lt;li&gt;直接切断连接。&lt;/li&gt;
  &lt;li&gt;发现指定证书后切断连接。（因为公钥未加密）&lt;/li&gt;
  &lt;li&gt;切断指定端口，如 22、443……&lt;/li&gt;
&lt;/ol&gt;</content><author><name>vjudge1</name></author><summary>为什么有些网站，例如百度、新浪微博和人人网所抄袭的对象，它们明明就在那里，但是就是进不去？

难道是网络故障吗？原因大家肯定都懂得其实不一定懂，因此本文将科普一些更详细的知识。</summary></entry><entry><title>黑苹果安装心得</title><link href="https://vjudge1.github.io/2015/09/14/hackintosh.html" rel="alternate" type="text/html" title="黑苹果安装心得" /><published>2015-09-14T04:11:00+08:00</published><updated>2015-09-14T04:11:00+08:00</updated><id>https://vjudge1.github.io/2015/09/14/hackintosh</id><content type="html" xml:base="https://vjudge1.github.io/2015/09/14/hackintosh.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;准备&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;买电脑&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;做好思想准备&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;论坛&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;认识一些概念&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-5&quot; id=&quot;markdown-toc-section-5&quot;&gt;确定自己电脑能不能安装&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#section-6&quot; id=&quot;markdown-toc-section-6&quot;&gt;虚拟机&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-7&quot; id=&quot;markdown-toc-section-7&quot;&gt;笔记本&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-8&quot; id=&quot;markdown-toc-section-8&quot;&gt;安装&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-9&quot; id=&quot;markdown-toc-section-9&quot;&gt;0. 准备&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-10&quot; id=&quot;markdown-toc-section-10&quot;&gt;1. 下载安装盘&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-11&quot; id=&quot;markdown-toc-section-11&quot;&gt;2. 将下载好的安装盘制作成启动盘&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-12&quot; id=&quot;markdown-toc-section-12&quot;&gt;3. 通过启动盘启动安装盘&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#section-13&quot; id=&quot;markdown-toc-section-13&quot;&gt;启动器&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#kext&quot; id=&quot;markdown-toc-kext&quot;&gt;驱动 (Kext)&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-14&quot; id=&quot;markdown-toc-section-14&quot;&gt;4. 运行安装程序&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-15&quot; id=&quot;markdown-toc-section-15&quot;&gt;5. 完成系统安装&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-16&quot; id=&quot;markdown-toc-section-16&quot;&gt;6. 安装驱动&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#section-17&quot; id=&quot;markdown-toc-section-17&quot;&gt;网卡&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-18&quot; id=&quot;markdown-toc-section-18&quot;&gt;显卡&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-19&quot; id=&quot;markdown-toc-section-19&quot;&gt;声卡&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-20&quot; id=&quot;markdown-toc-section-20&quot;&gt;触摸板&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-21&quot; id=&quot;markdown-toc-section-21&quot;&gt;电池电量&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#usb-30&quot; id=&quot;markdown-toc-usb-30&quot;&gt;USB 3.0&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#dsdt&quot; id=&quot;markdown-toc-dsdt&quot;&gt;6.5 DSDT&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#section-22&quot; id=&quot;markdown-toc-section-22&quot;&gt;亮度调节&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-23&quot; id=&quot;markdown-toc-section-23&quot;&gt;电池电量&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-24&quot; id=&quot;markdown-toc-section-24&quot;&gt;原生电源管理&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-25&quot; id=&quot;markdown-toc-section-25&quot;&gt;7. 安装软件，开始享受新系统&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-26&quot; id=&quot;markdown-toc-section-26&quot;&gt;其他问题&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-27&quot; id=&quot;markdown-toc-section-27&quot;&gt;系统升级&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#imessage--facetime&quot; id=&quot;markdown-toc-imessage--facetime&quot;&gt;iMessage 和 FaceTime&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#iwork--imovie&quot; id=&quot;markdown-toc-iwork--imovie&quot;&gt;iWork 和 iMovie&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ntfs-&quot; id=&quot;markdown-toc-ntfs-&quot;&gt;挂载 NTFS 磁盘&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-28&quot; id=&quot;markdown-toc-section-28&quot;&gt;维护相关&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#recovery-hd&quot; id=&quot;markdown-toc-recovery-hd&quot;&gt;Recovery HD&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-29&quot; id=&quot;markdown-toc-section-29&quot;&gt;重装&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-30&quot; id=&quot;markdown-toc-section-30&quot;&gt;调整分区容量&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;鉴于周围有很多人想体验体验苹果系统，作为一个成功用上黑苹果的人，我觉得应该写点什么了。&lt;/p&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;什么是黑苹果&lt;/h4&gt;

&lt;p&gt;黑苹果就是在自己（非苹果品牌）电脑上面安装的苹果系统。因为苹果官方不允许这样做，所以对于初学者来说，黑苹果的安装绝对比其他系统困难很多。&lt;/p&gt;
&lt;/div&gt;

&lt;h1 id=&quot;section&quot;&gt;准备&lt;/h1&gt;

&lt;h2 id=&quot;section-1&quot;&gt;买电脑&lt;/h2&gt;

&lt;p&gt;如果你还没买电脑，建议咨询咨询已经装过黑苹果的人，尽量买一台配置接近苹果的电脑。&lt;span class=&quot;blackout&quot;&gt;土豪们可以直接买苹果电脑，反正 Pro 才一万多点，比戴尔的外星人便宜多了，而且还省了高达九成九的麻烦。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;绝对不要：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;买联想或惠普的电脑。除非你想知道刷机刷成砖的样子。&lt;/li&gt;
  &lt;li&gt;买处理器是 AMD 的电脑。处理器是 AMD，意味着你和黑苹果无缘了。&lt;span class=&quot;blackout&quot;&gt;其实 AMD 也能装，就是麻烦事儿多点。&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-2&quot;&gt;做好思想准备&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;如果你是从头开始，请做好&lt;strong&gt;长期斗争&lt;/strong&gt;的准备！&lt;/p&gt;

    &lt;p&gt;如果事情一切顺利，大约需要一个星期的时间。如果事情不顺，可能得花几个月时间才能弄得比较好用。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装双系统（3 个系统、4 个系统……）不会对电脑造成破坏，&lt;span class=&quot;blackout&quot;&gt;除非你脑残或手残。&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-3&quot;&gt;论坛&lt;/h2&gt;

&lt;p&gt;请到&lt;a href=&quot;http://bbs.pcbeta.com&quot;&gt;远景论坛&lt;/a&gt;上面注册账号。这不是广告，而是各路网友智慧的结晶。&lt;/p&gt;

&lt;p&gt;注册之后请大致扫一眼&lt;a href=&quot;http://bbs.pcbeta.com/viewthread-1516108-1-1.html&quot;&gt;这个目录&lt;/a&gt;。以后我们会经常和这个论坛打交道。&lt;/p&gt;

&lt;p&gt;接下来本文会贴一些来自远景论坛的链接。有的需要阅读权限或下载附件，所以你当然要注册账号。&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;认识一些概念&lt;/h2&gt;

&lt;p&gt;如果对以下问题不感冒，那么请不要拿黑苹果练手。&lt;span class=&quot;blackout&quot;&gt;先好好练习如何装 Windows 系统，练会了再回来。&lt;/span&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;苹果系统最新版本是多少？&lt;/li&gt;
  &lt;li&gt;装过系统吗？&lt;/li&gt;
  &lt;li&gt;你的电脑是 UEFI/Legacy、GPT/MBR？&lt;/li&gt;
  &lt;li&gt;什么是引导？&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-5&quot;&gt;确定自己电脑能不能安装&lt;/h2&gt;

&lt;h3 id=&quot;section-6&quot;&gt;虚拟机&lt;/h3&gt;

&lt;p&gt;只要电脑处理器不是 AMD 的，基本上没问题。&lt;span class=&quot;blackout&quot;&gt;可以直接下载一个已经装好的映像。&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-7&quot;&gt;笔记本&lt;/h3&gt;

&lt;p&gt;只要不是 AMD 处理器，就可以看&lt;a href=&quot;http://bbs.pcbeta.com/viewthread-1516108-1-1.html&quot;&gt;这里&lt;/a&gt;。如果 CPU 和显卡符合要求，那么可以继续了。&lt;/p&gt;

&lt;p&gt;苹果系统不支持 AMD 处理器。&lt;span style=&quot;background-color: #111&quot;&gt;可以通过更换破解之后的内核来安装。因为破解有一定的隐患（例如不能直接升级），所以说，即使能成功，我也不建议在 AMD 处理器电脑上安装。&lt;/span&gt;&lt;/p&gt;

&lt;h1 id=&quot;section-8&quot;&gt;安装&lt;/h1&gt;

&lt;div class=&quot;callout callout-success&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;提醒&lt;/h4&gt;

&lt;p&gt;在正式按照论坛教程安装系统之前，先看这里——&lt;/p&gt;

&lt;p&gt;装系统，不管是安装哪个系统（Windows/Linux/黑苹果），思路都是一样的：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;下载安装盘&lt;/li&gt;
  &lt;li&gt;将下载好的安装盘制作成启动盘&lt;/li&gt;
  &lt;li&gt;通过启动盘启动安装盘&lt;/li&gt;
  &lt;li&gt;运行安装程序&lt;/li&gt;
  &lt;li&gt;完成系统安装&lt;/li&gt;
  &lt;li&gt;安装驱动&lt;/li&gt;
  &lt;li&gt;安装软件，开始使用新系统&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;

&lt;p&gt;由于 Windows 或比较流行的 Linux 发行版都希望用户能够轻松地把系统装到自己电脑上，所以，即使有些概念不太好理解，最终还是可以不太费力地把系统装好。&lt;/p&gt;

&lt;p&gt;而苹果公司并不希望用户在普通电脑上面安装苹果，所以以上每一步操作都有着极大的障碍。而且，苹果是硬件公司，你的电脑很可能因为与苹果硬件不匹配而在半路出现问题！&lt;/p&gt;

&lt;p&gt;装黑苹果感觉很复杂，原因就在此。&lt;/p&gt;

&lt;p&gt;接下来将对以上几步进行讲解，并用 Windows 作对比。希望大家理解之后再去看论坛的教程。&lt;/p&gt;

&lt;h2 id=&quot;section-9&quot;&gt;0. 准备&lt;/h2&gt;

&lt;p&gt;由于黑苹果的特殊性，我们应该做一些准备：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;把电脑硬盘给苹果划出一个分区。如果只想体验体验，那么 50GB 足矣。如果日后可能要作为日常系统使用（事实上很可能如此），并且要安装一些大型软件&lt;span class=&quot;blackout&quot;&gt;例如黄片&lt;/span&gt;，那么就要多分一些，因为苹果系统分区基本上没办法改容量。&lt;/li&gt;
  &lt;li&gt;准备一个 PE 启动盘。一旦后悔，可以随时把电脑恢复原状。&lt;/li&gt;
  &lt;li&gt;虽然事实上只用 Linux 系统也能把黑苹果装好，但是我建议初学者在 Windows 里操作。因为在 Linux 中一旦出问题，只有那高高在上的&lt;a href=&quot;http://cn.uncyclopedia.wikia.com/没有人&quot;&gt;没有人&lt;/a&gt;才会来救你。&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;linux&quot;&gt;Linux&lt;/h4&gt;

&lt;p&gt;不建议你用 Linux，是因为很难找到一个在 Linux 中刻录 dmg/cdr 格式的软件。如果你已经刻了一个安装盘，或者找到刻录软件了，您请便。只有刻启动盘、安装启动器和处理故障的时候才需要电脑上原有的系统。&lt;/p&gt;

&lt;p&gt;Linux，装上 HFS+ 文件系统支持之后就可以读写 HFS+ 分区了，而且是免费的。&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-10&quot;&gt;1. 下载安装盘&lt;/h2&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;windows-&quot;&gt;Windows 是这样的&lt;/h4&gt;

&lt;p&gt;Windows 的安装盘是 ISO 格式的（我从来不考虑 GHO），所以可以很轻松地刻录成安装盘。即使不想刻录，基于 U 盘的解决方案也有很多。&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;而苹果是这样的——苹果安装盘的映像是 dmg 或 cdr 格式的。不管是哪种，能够读取的软件都很少。而且普通电脑是无法直接拿来引导！&lt;/p&gt;

&lt;p&gt;在远景论坛上面，苹果系统的安装盘一般分三种：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;原版——基于原版制作的安装盘。一般不是“彻底”的原版，而是进行了一些简单的加工，可以用于安装，因为“纯正”的原版在普通电脑上面根本用不了。&lt;/li&gt;
  &lt;li&gt;懒人版——经过破解，支持了 MBR 分区（因为苹果系统只支持 EFI+GPT）。除此之外，不要以为懒人版有什么额外的东西了。&lt;/li&gt;
  &lt;li&gt;整合版——整合了一些驱动。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;那么如何选择安装盘？这取决于电脑的配置情况——&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;UEFI+GPT 优先选择原版。这是最接近原生苹果的搭配。&lt;/li&gt;
  &lt;li&gt;Legacy+MBR 当然只能选择懒人版。&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;个人建议&lt;/h4&gt;

&lt;p&gt;我的建议是，如果电脑支持而且你会操作，那么就先把电脑转换成 UEFI+GPT，因为在 MBR 条件下把系统装好，&lt;strong&gt;进行系统升级会带来很大麻烦&lt;/strong&gt;，而 UEFI+GPT 可以大大方方地升级而不用担心出错。不过也可以在装完之后再转。&lt;a href=&quot;/2014/12/18/legacy-mbr-to-uefi-gpt-hackintosh/&quot;&gt;这里&lt;/a&gt;是一个装完之后才转换的教程。&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;callout callout-warning&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;看不懂？&lt;/h4&gt;

&lt;p&gt;即使看不懂，也要清楚自己电脑到底是 UEFI+GPT，还是 Legacy+MBR，或者是什么方案，否则后面实在无法继续。&lt;/p&gt;

&lt;p&gt;下面是一些简易的区分方法：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Windows XP：肯定是 Legacy+MBR&lt;/li&gt;
  &lt;li&gt;Windows 7：绝大多数系统都是 Legacy+MBR&lt;/li&gt;
  &lt;li&gt;Windows 8 或更高：打开“计算机管理”，找到“磁盘管理”。如果里面有几个零碎的、没有盘符的分区，那么就是 UEFI+GPT，否则是 Legacy+MBR。&lt;/li&gt;
  &lt;li&gt;Linux：能够装 Linux，那么这个问题不用教了吧？（提示：看 /dev/sda1 后面是 sda2 还是 sda5）&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;

&lt;h2 id=&quot;section-11&quot;&gt;2. 将下载好的安装盘制作成启动盘&lt;/h2&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;windows-&quot;&gt;Windows 是这样的&lt;/h4&gt;

&lt;p&gt;ISO 格式安装盘可以直接刻录到光盘里。因为现在很少有人使用光盘，所以一般都采用一些软件（例如 UltraISO）将安装盘刻录到 U 盘中。即使不直接刻录，通过 PE 启动盘也可以进行安装。总之解决方案非常多。&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;由于苹果采用了特殊的文件系统（HFS+），所以在 Windows 中不太容易看到其中的文件。并且，由于没有引导信息，所以即使刻录好也无法直接引导启动（后面再讲如何启动）。&lt;/p&gt;

&lt;p&gt;因此论坛教程会让你安装 &lt;code class=&quot;highlighter-rouge&quot;&gt;TransMac&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;Leopard 硬盘安装助手&lt;/code&gt;之类的软件。这些软件将完成同样的“刻录”过程。&lt;/p&gt;

&lt;p&gt;此外还有一点与 Windows 不同，刻录黑苹果安装盘的时候，有的教程会让你刻录到 U 盘中，有的教程会让你刻录到自己电脑硬盘中。这些都是可行的。&lt;/p&gt;

&lt;p&gt;刻录完毕，有些教程会让你把刻录的磁盘分区的磁盘标记改为 AF（MBR 磁盘）或 {48465300-0000-11AA-AA11-00306543ECAC}。这是为了能让各种软件正确地将分区识别为“苹果系统分区”而不是损坏的分区。&lt;/p&gt;

&lt;h2 id=&quot;section-12&quot;&gt;3. 通过启动盘启动安装盘&lt;/h2&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;windows-&quot;&gt;Windows 是这样的&lt;/h4&gt;

&lt;p&gt;开机按 F12&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;黑苹果就麻烦多了……&lt;/p&gt;

&lt;h3 id=&quot;section-13&quot;&gt;启动器&lt;/h3&gt;

&lt;p&gt;与刻录出来的 Windows 安装盘不同，苹果系统盘映像不含引导信息（就算有，普通电脑也根本无法引导）。&lt;/p&gt;

&lt;p&gt;因此必须借助一个辅助程序，才能让普通电脑启动苹果系统。目前流行这两个程序：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Clover (四叶草)——用于 UEFI+GPT 模式&lt;/li&gt;
  &lt;li&gt;Chameleon (变色龙)——用于 Legacy+MBR 模式&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;变色龙有 Windows 版安装程序，而四叶草没有，因此四叶草的文件需要想办法弄到手。&lt;/p&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;efi-&quot;&gt;EFI 引导&lt;/h4&gt;

&lt;p&gt;通过 EFI 引导并不需要去“刻录”。以 U 盘为例，只要在 U 盘根目录里有个 EFI 文件夹，EFI 里面有个 BOOT，BOOT 里面有个 bootx64.efi，而且文件正确，电脑就能以 UEFI 模式引导 U 盘了。&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;以后会经常遇到“-f”、“-x”、“-v”等字样，这些是 Chameleon 的；而“Verbose mode”、“Without caches”等字样是 Clover 的。&lt;/p&gt;

&lt;h3 id=&quot;kext&quot;&gt;驱动 (Kext)&lt;/h3&gt;

&lt;p&gt;苹果电脑把驱动叫做“Kext”。以后看到“SLE”（/System/Library/Extensions）、“EE”（/Extra/Extensions，变色龙专用）、“kexts/10.10”（Clover 安装目录/kexts/10.10，Clover 专用）要知道他们在谈论驱动的存放路径。&lt;/p&gt;

&lt;p&gt;由于苹果电脑硬件和普通电脑不完全一样，部分驱动在普通电脑上面会产生错误，因此在正式进入安装程序之前，需要添加或删除一些驱动。&lt;/p&gt;

&lt;p&gt;由于 Windows 无法直接操作苹果分区，所以有的教程会让你安装 HFS+ for Windows，并且够意思地给了一个注册码。（某些 Linux，如 Ubuntu，可以直接读取 HFS+ 分区，不过需要手动用 mount 挂载才能写入。）&lt;/p&gt;

&lt;p&gt;添加和删除哪些驱动呢？看教程怎样说。此外有贴子专门解释了那些需要添加的驱动的作用。&lt;/p&gt;

&lt;h2 id=&quot;section-14&quot;&gt;4. 运行安装程序&lt;/h2&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;windows-&quot;&gt;Windows 是这样的&lt;/h4&gt;

&lt;p&gt;这一步 Windows 和黑苹果都一样，屏幕上都会出现能让人认识的中国字（虽然连成单词之后不一定知道是什么意思）。只不过，运气不好的话，黑苹果安装程序可以让系统崩溃……&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;学会自救&lt;/h4&gt;

&lt;p&gt;在激动人心时刻到来之前，我们必须学会如何自救。&lt;/p&gt;

&lt;p&gt;一般情况下，教程都会告诉你应该用什么参数启动，并让你开启详细模式。但是，毕竟不是官方电脑，所以系统崩溃是正常现象。一旦崩溃，你需要知道如何通过错误信息进行自救。&lt;a href=&quot;http://bbs.pcbeta.com/viewthread-863656-1-1.html&quot;&gt;这里&lt;/a&gt;是一个常见错误总结。&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;进行到这一步时，我们终于要和真正的苹果程序打交道了。&lt;/p&gt;

&lt;p&gt;如果一进去就崩溃了，那么当然要去论坛搜索相关错误现象和错误信息。建议不要直接提问，以免被人鄙视。&lt;/p&gt;

&lt;p&gt;安装向导都是中国字，很好懂。不过千万不要手残，选错了分区……&lt;/p&gt;

&lt;p&gt;安装过程很漫长。即使电脑是固态硬盘，安装时间也不短。这个时候你只能祈祷不出错。&lt;/p&gt;

&lt;p&gt;如果安装坚持到了最后，没崩溃，那么恭喜你！&lt;/p&gt;

&lt;h2 id=&quot;section-15&quot;&gt;5. 完成系统安装&lt;/h2&gt;

&lt;p&gt;有的教程会让你重新删驱动，照做即可。&lt;/p&gt;

&lt;p&gt;如果无法进入系统，那么一定要用“详细模式”引导，记录错误现象，并向论坛寻求帮助。&lt;/p&gt;

&lt;p&gt;如果能够进入系统，那么接下来按照屏幕提示完成系统安装即可。都是中国话，应该没有人看不懂。&lt;/p&gt;

&lt;div class=&quot;callout callout-warning&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;讲解到此为止&lt;/h4&gt;

&lt;p&gt;可以逛论坛去了，因为在你真正操作到这一步的时候，麻烦才刚刚开始……&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-16&quot;&gt;6. 安装驱动&lt;/h2&gt;

&lt;div class=&quot;callout callout-warning&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;先把系统装好&lt;/h4&gt;

&lt;p&gt;先把系统装好，然后再讨论装驱动的问题。&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;windows-&quot;&gt;Windows 是这样的&lt;/h4&gt;

&lt;p&gt;下载并按照“驱动精灵”，如果没有网卡驱动就下载集成网卡驱动的版本。全部装完之后把驱动精灵卸载就可以了。&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;白苹果是这样的&lt;/h4&gt;

&lt;p&gt;苹果是硬件公司——所有硬件都免驱，系统装好就可以使用了。&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;安装系统，运气好的（初学者），几个小时就能弄好。运气差的也不会花太多时间。&lt;/p&gt;

&lt;p&gt;因为绝大多数时间都花在驱动上面了。&lt;span style=&quot;background-color: #111;&quot;&gt;忘记备份驱动和 DSDT
 而重装系统也会产生相同的效果。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;如果进行到这一步，接下来就要经常和论坛打交道了，例如&lt;a href=&quot;http://bbs.pcbeta.com/viewthread-1516108-1-1.html&quot;&gt;这个导览&lt;/a&gt;和&lt;a href=&quot;http://bbs.pcbeta.com/viewthread-1470582-1-1.html&quot;&gt;这个导览&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;section-17&quot;&gt;网卡&lt;/h3&gt;

&lt;p&gt;网络是最关键的问题。有了网络，你才能到论坛上面搜答案。&lt;/p&gt;

&lt;p&gt;有线网卡一般问题不大。到论坛里找到驱动，下载安装即可。&lt;/p&gt;

&lt;p&gt;无线网卡问题很大，大致分为以下几种情况：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Atheros、Broadcom 牌：如果论坛中提到解决方案，那么太好了。（有些型号免驱，装完系统就能直接用——这是最好的）如果“无解”，那么就得换无线网卡了。&lt;/li&gt;
  &lt;li&gt;Intel 牌：直接预备 30 块钱换无线网卡吧。&lt;/li&gt;
  &lt;li&gt;USB 无线网卡：弄清楚网卡芯片，然后到论坛上面寻找解决方案（驱动）。&lt;strong&gt;USB 无线网卡不稳定，容易导致系统崩溃。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;无线网卡&lt;/h4&gt;

&lt;p&gt;到淘宝网即可很方便地买到支持黑苹果的无线网卡，而且价格并不算贵。不过最好先确认一下接口，并且确认应该使用半高还是全高（把电脑拆开就知道是什么意思了）。&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;联想和惠普笔记本&lt;/h4&gt;

&lt;p&gt;联想和惠普的笔记本采用了“白名单”机制，也就是说，你更换无线网卡，电脑会拒绝开机，并要求你将“非法的”无线网卡拆下来。&lt;/p&gt;

&lt;p&gt;这时你需要找另外一台笔记本电脑，查看无线网卡的 DEV、VEN 和 SUBSYS 参数，并且按照刷白名单教程，通过一些工具提取 BIOS 固件，将白名单修改成你自己的网卡，并重新刷 BIOS。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意，刷机有风险，刷坏会变砖！&lt;/strong&gt;&lt;span class=&quot;blackout&quot;&gt;变砖也不怕，只要找到自己电脑型号的盲刷包，对电脑进行盲刷，即可救砖。我的电脑砖过一次，然后就是靠盲刷省了几千块钱……&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://bbs.bios.net.cn/thread-4521994-1-1.html&quot;&gt;这里是刷白名单的教程&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-18&quot;&gt;显卡&lt;/h3&gt;

&lt;p&gt;一般情况下，Intel 核显是能够自动识别的，而 Nvidia 或 AMD 独显无解（即使系统能够识别出来），所以只能用核显。&lt;/p&gt;

&lt;p&gt;大多数基于 Optimus 技术的笔记本是无法屏蔽核显的，这就意味着，N 卡独显在黑苹果中根本没有任何作用，除了多耗你一点电。如果不能把独显屏蔽，请到论坛搜索有关教程（涉及 DSDT，本文后面会提及）。&lt;/p&gt;

&lt;h3 id=&quot;section-19&quot;&gt;声卡&lt;/h3&gt;

&lt;p&gt;声卡有两种解决方案：万能声卡驱动和仿冒官方声卡。&lt;/p&gt;

&lt;p&gt;万能声卡驱动是最简单的——只需要安装一个叫做 VoodooHDA 的驱动即可解决问题。不过音量太大的时候可能会爆音。&lt;/p&gt;

&lt;p&gt;而仿冒官方声卡是一个非常麻烦的过程，需要对硬件有一定的了解（需要改 DSDT，本文后面会提及）。对于新手来说，这个过程是非常漫长和复杂的。&lt;/p&gt;

&lt;h3 id=&quot;section-20&quot;&gt;触摸板&lt;/h3&gt;

&lt;p&gt;如果苹果系统不支持你的触摸板，那么可以用万能驱动（VoodooController），只不过你很可能体验不了苹果的触摸板手势。&lt;/p&gt;

&lt;h3 id=&quot;section-21&quot;&gt;电池电量&lt;/h3&gt;

&lt;p&gt;我是通过一个叫 ACPIBatteryManager 的驱动来解决问题的。如果安装这个驱动导致系统崩溃，那么只能去改 DSDT 了。&lt;/p&gt;

&lt;h3 id=&quot;usb-30&quot;&gt;USB 3.0&lt;/h3&gt;

&lt;p&gt;我电脑没有 USB 3.0，所以我没做过相关研究。&lt;/p&gt;

&lt;h2 id=&quot;dsdt&quot;&gt;6.5 DSDT&lt;/h2&gt;

&lt;p&gt;DSDT，简而言之就是用于识别硬件的&lt;span class=&quot;blackout&quot;&gt;、看多了容易脑残的&lt;/span&gt;一些代码。&lt;/p&gt;

&lt;p&gt;一般情况都是先从 Windows 或 Linux 中提取一个原始的 DSDT，然后在苹果系统中通过 DSDT Editor 来编辑。变色龙和四叶草都可以加载自定义 DSDT，所以你需要做的就是，改代码，保存，编译，重启，观察现象然后再改代码，如此反复。&lt;/p&gt;

&lt;p&gt;此外还有一个工具叫做 IORegistryExplorer，是用来查看电脑硬件情况的。DSDT Editor 和它配合使用，效果更好。&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;blackout&quot;&gt;因为改 DSDT 非常容易导致脑残，所以装黑苹果不仅浪费时间，而且还特别耽误事儿。如果你因此丢了女朋友，我概不负责。&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-22&quot;&gt;亮度调节&lt;/h3&gt;

&lt;h3 id=&quot;section-23&quot;&gt;电池电量&lt;/h3&gt;

&lt;h3 id=&quot;section-24&quot;&gt;原生电源管理&lt;/h3&gt;

&lt;div class=&quot;callout callout-primary&quot;&gt;
&lt;h4 id=&quot;section&quot;&gt;这里是有意留空的&lt;/h4&gt;

&lt;p&gt;如果遇到了相关问题，去论坛上面找答案吧。&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-25&quot;&gt;7. 安装软件，开始享受新系统&lt;/h2&gt;

&lt;p&gt;这个不用解释了吧。&lt;/p&gt;

&lt;p&gt;值得注意的是，尽管苹果系统免费，但是因为苹果公司要求系统只能在苹果设备上运行，所以你的黑苹果仍然是盗版。&lt;span class=&quot;blackout&quot;&gt;别带着自己电脑去外国嘚瑟，除非你想吃外国的牢饭。&lt;/span&gt;&lt;/p&gt;

&lt;h1 id=&quot;section-26&quot;&gt;其他问题&lt;/h1&gt;

&lt;h2 id=&quot;section-27&quot;&gt;系统升级&lt;/h2&gt;

&lt;p&gt;只要你没破解过内核，那么只管放心地从 App Store 升级系统。&lt;/p&gt;

&lt;p&gt;如果你破解了内核（懒人版也是破解了内核），那么请先到论坛里把破解的内核下载好，升级之后重新破解一下。&lt;/p&gt;

&lt;p&gt;如果嫌麻烦，建议你找个时间把自己电脑改成 UEFI+GPT 的。&lt;/p&gt;

&lt;h2 id=&quot;imessage--facetime&quot;&gt;iMessage 和 FaceTime&lt;/h2&gt;

&lt;p&gt;黑苹果直接登录是登不进去的，因为这两个服务会对系统的真伪进行验证。&lt;/p&gt;

&lt;p&gt;使用变色龙的，变色龙本身有一个功能可以对这两个服务进行破解，从而顺利登录。&lt;/p&gt;

&lt;p&gt;而 Clover 没有类似功能。因此，需要到网上搜一个（或者问一些认识人，或者去苹果专卖店偷）正版电脑的序列号，然后给苹果客服打电话。一般情况下，和苹果客服磨叽磨叽就能解决问题。&lt;span class=&quot;blackout&quot;&gt;当然，不要让他们知道你的苹果是假的，除非你被 DSDT 折腾脑残了。&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&quot;iwork--imovie&quot;&gt;iWork 和 iMovie&lt;/h2&gt;

&lt;p&gt;这两套软件在新苹果电脑上是免费的，而黑苹果用户到 App Store 里一看，会发现它们价格感人。&lt;/p&gt;

&lt;p&gt;因此，需要到网上搜一下老苹果用户如何免费使用这些软件。大致的思路是，先把电脑系统的语言换成英语，然后下载旧版的软件，接下来蹭 App Store 的优惠活动（免费升级）。升级之后你就成功“购买”了这些软件——以后即使重装也可以随便用了。&lt;/p&gt;

&lt;h2 id=&quot;ntfs-&quot;&gt;挂载 NTFS 磁盘&lt;/h2&gt;

&lt;p&gt;苹果系统可以读取 NTFS 磁盘，但是只读（因为苹果对 NTFS 支持有限，容易出错）。如果真需要写入，可以看&lt;a href=&quot;/2015/05/30/enable-ntfs-writing-support-in-os-x/&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;section-28&quot;&gt;维护相关&lt;/h2&gt;

&lt;h3 id=&quot;recovery-hd&quot;&gt;Recovery HD&lt;/h3&gt;

&lt;p&gt;Recovery HD 是一个相当于 PE 的紧急系统。&lt;/p&gt;

&lt;p&gt;只有原生安装盘才会装出一个 Recovery HD。如果你的电脑没有（例如用了懒人版），那么在转成 UEFI+GPT 之后升级系统，Recovery HD 也会冒出来。&lt;/p&gt;

&lt;h3 id=&quot;section-29&quot;&gt;重装&lt;/h3&gt;

&lt;p&gt;如果有 Recovery HD，那么只需进 Recovery HD 里，然后选择重装。总之，具体操作和白苹果是基本相同的，除了开机时不能按 Command-R。&lt;/p&gt;

&lt;p&gt;当然，你应该备份一下自己破解时用的驱动，还有 DSDT。如果弄丢了，你几个星期的辛苦就全白费了。&lt;/p&gt;

&lt;h3 id=&quot;section-30&quot;&gt;调整分区容量&lt;/h3&gt;

&lt;p&gt;很少有支持 HFS+ 文件系统的磁盘分区软件。&lt;/p&gt;

&lt;p&gt;对于一般电脑而言，苹果本身的“磁盘工具”会以为你用了 Bootcamp，然后拒绝调整容量。因此要用其他软件——&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Windows 中有 Paragon Partition Manager。&lt;/li&gt;
  &lt;li&gt;Linux 中有 GParted，但是只能缩小容量，不能扩大容量。&lt;/li&gt;
&lt;/ul&gt;</content><author><name>vjudge1</name></author><category term="Hackintosh" /><summary>鉴于周围有很多人想体验体验苹果系统，作为一个成功用上黑苹果的人，我觉得应该写点什么了。</summary></entry></feed>
